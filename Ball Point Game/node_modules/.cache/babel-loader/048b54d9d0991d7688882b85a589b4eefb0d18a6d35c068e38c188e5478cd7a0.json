{"ast":null,"code":"var _jsxFileName = \"/Users/huanghao/Desktop/Ball Point Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Alert, CircularProgress, Container, Card, Box, Typography, Tabs, Tab, TextField, Button, TableContainer, Table, TableHead, TableBody, TableCell, TableRow } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_PLAYERS = 5;\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://172.20.10.4:8080';\nconst WS_URL = process.env.REACT_APP_WS_URL || 'ws://172.20.10.4:8080/ws';\nconst ws = new WebSocket(WS_URL);\nfunction App() {\n  _s();\n  const [gameId, setGameId] = React.useState(null);\n  const [game, setGame] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [activeTab, setActiveTab] = React.useState(0);\n  const [playerId, setPlayerId] = React.useState(null);\n  const [playerName, setPlayerName] = React.useState('');\n  const [playerCount, setPlayerCount] = React.useState(MAX_PLAYERS);\n  const [joinGameId, setJoinGameId] = React.useState('');\n  const [roundCount, setRoundCount] = React.useState(5);\n  const [timeLeave, setTimeLeave] = React.useState(120);\n  const [count, setCount] = React.useState(1);\n  React.useEffect(() => {\n    // sync with server\n    ws.onmessage = msg => {\n      const data = JSON.parse(msg.data);\n      if (data.gameId === gameId) {\n        setGame(data);\n      }\n    };\n    const handleKeyDown = e => {\n      // 添加调试信息\n      console.log('Key pressed:', e.key);\n      console.log('Game status:', game === null || game === void 0 ? void 0 : game.status);\n      console.log('Player ID:', playerId);\n      if (e.key === 'v') {\n        console.log(game);\n        return;\n      }\n\n      // 首先验证游戏状态\n      if (!gameId || !game || game.status !== 'in_progress') {\n        console.log('Game not in progress');\n        return;\n      }\n\n      // 验证当前玩家\n      const player = game.players.find(player => player.id === playerId);\n      if (!player) {\n        console.log('Player not found');\n        return;\n      }\n\n      // 验证玩家是否有球\n      const balls = player.balls;\n      const ball = balls[balls.length - 1];\n      if (!ball) {\n        console.log('No ball available');\n        return;\n      }\n\n      // 验证球是否属于当前玩家\n      if (ball.playerId !== playerId) {\n        console.log('Ball belongs to another player');\n        return;\n      }\n\n      // 处理具体的按键\n      switch (e.key.toLowerCase()) {\n        case 'r':\n          if (ball.color === 'red') {\n            handleColorMatch(ball);\n          }\n          break;\n        case 'g':\n          if (ball.color === 'green') {\n            handleColorMatch(ball);\n          }\n          break;\n        case 'b':\n          if (ball.color === 'blue') {\n            handleColorMatch(ball);\n          }\n          break;\n        case 'enter':\n          handleEnterKey(ball);\n          break;\n        case 'n':\n          handleNewBall();\n          break;\n        case 'p':\n          handlePoint();\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    const timer = setInterval(() => {\n      if (game && game.status === 'in_progress' && game.players.find(player => player.id === playerId).isOwn) {\n        const newGame = {\n          ...game\n        };\n        setTimeLeave(timeLeave - 1);\n        if (timeLeave < 0 && newGame.currentRound < newGame.config.rounds) {\n          newGame.currentRound += 1;\n          newGame.status = 'waiting';\n          newGame.remainingTime = 120;\n          setTimeLeave(120);\n        } else if (timeLeave < 0 && newGame.currentRound === newGame.config.rounds) {\n          newGame.status = 'end';\n          clearInterval(timer);\n        }\n        setGame(newGame);\n        axios.post(`${SERVER_URL}/update_round_time_status`, {\n          game_id: gameId,\n          remainingTime: timeLeave,\n          status: newGame.status,\n          currentRound: newGame.currentRound\n        });\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [game, gameId, playerId, timeLeave]);\n  const handleCreateGame = e => {\n    e.preventDefault();\n    axios.post(`${SERVER_URL}/create_game`, {\n      name: playerName,\n      player_count: playerCount,\n      round_count: 5\n    }).then(res => {\n      setGameId(res.data.game.gameId);\n      setGame(res.data.game);\n      setPlayerId(res.data.playerId);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const handleJoinGame = e => {\n    e.preventDefault();\n    axios.post(`${SERVER_URL}/join_game`, {\n      name: playerName,\n      game_id: joinGameId\n    }).then(res => {\n      setGameId(res.data.game.gameId);\n      setGame(res.data.game);\n      setPlayerId(res.data.playerId);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const startGame = () => {\n    // players should be more than 1\n    if (game.players.length < game.config.playerCount) {\n      setError(`Minimum ${game.config.playerCount} players required to start the game`);\n      return;\n    }\n    let flag = 0;\n    // players positon should be unique\n    // players position should be between 1 and 20\n    // players position should be at least 2 blocks apart\n    game.players.forEach((player, index) => {\n      if (player.position < 1 || player.position > game.config.blocks) {\n        flag = 1;\n      }\n      if (index > 0 && Math.abs(player.position - game.players[index - 1].position) < 2) {\n        flag = 2;\n      }\n    });\n    if (flag === 1) {\n      setError('Invalid player position');\n      return;\n    }\n    if (flag === 2) {\n      setError('Players should be at least 2 blocks apart');\n      return;\n    }\n    setTimeLeave(120); // Reset time to 120 seconds when starting the game\n    const newGame = {\n      ...game\n    };\n    newGame.config.roundCount = roundCount;\n    setGame(newGame);\n    axios.post(`${SERVER_URL}/start_game`, {\n      game_id: gameId,\n      player_id: playerId,\n      players: game.players,\n      round_count: roundCount\n    }).then(res => {\n      setGame(res.data);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const handleColorMatch = ball => {\n    if (count === 2) {\n      ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n      ball.position += 1;\n      if (ball.position > game.config.blocks) {\n        ball.position = 1;\n      }\n      setCount(1);\n    } else {\n      setCount(2);\n    }\n\n    // 更新游戏状态并确认\n    axios.post(`${SERVER_URL}/update_game`, {\n      game_id: gameId,\n      players: game.players\n    }).then(res => {\n      console.log('Game state updated successfully');\n      setGame(res.data);\n    }).catch(err => {\n      console.error('Failed to update game state:', err);\n      setError(err.message);\n    });\n  };\n  const handleEnterKey = ball => {\n    if (!ball) return;\n    const nextPlayer = game.players.find(player => player.position === ball.position);\n    if (nextPlayer && nextPlayer.index !== player.index + 1 && nextPlayer.index !== (player.index - 1 || 1)) {\n      if (ball.process.includes(nextPlayer.index) || ball.process.filter(e => e === 1).length < 2) {\n        ball.process.push(nextPlayer.index);\n        ball.position = nextPlayer.position;\n        ball.playerId = nextPlayer.id;\n        ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n        nextPlayer.balls = [ball, ...nextPlayer.balls];\n      }\n    }\n    balls.splice(balls.length - 1, 1);\n    axios.post(`${SERVER_URL}/update_game`, {\n      game_id: gameId,\n      players: game.players\n    }).then(res => {\n      console.log('Game state updated successfully');\n      setGame(res.data);\n    }).catch(err => {\n      console.error('Failed to update game state:', err);\n      setError(err.message);\n    });\n  };\n  const handleNewBall = () => {\n    const player = game.players.find(player => player.id === playerId);\n    if (player.index === 1) {\n      player.balls.push({\n        color: game.config.balls[Math.floor(Math.random() * 3)],\n        position: player.position,\n        process: [player.index],\n        playerId: player.id,\n        index: player.index\n      });\n    }\n    axios.post(`${SERVER_URL}/update_game`, {\n      game_id: gameId,\n      players: game.players\n    }).then(res => {\n      console.log('Game state updated successfully');\n      setGame(res.data);\n    }).catch(err => {\n      console.error('Failed to update game state:', err);\n      setError(err.message);\n    });\n  };\n  const handlePoint = () => {\n    const currentPlayer = game.players.find(p => p.id === playerId);\n    if (currentPlayer && currentPlayer.index === 1) {\n      const playerWithCompleteBall = game.players.find(player => player.balls.some(b => b.process && b.process.sort().join('') === '1' + game.players.map(p => p.index).sort().join('')));\n      if (playerWithCompleteBall) {\n        const newGame = {\n          ...game\n        };\n        newGame.results[game.currentRound - 1].score += 1;\n        const updatedPlayer = newGame.players.find(p => p.id === playerWithCompleteBall.id);\n        if (updatedPlayer) {\n          updatedPlayer.balls = updatedPlayer.balls.filter(b => !b.process || b.process.sort().join('') !== '1' + game.players.map(p => p.index).sort().join(''));\n        }\n        setGame(newGame);\n        axios.post(`${SERVER_URL}/update_game`, {\n          game_id: gameId,\n          players: newGame.players\n        }).then(res => {\n          console.log('Game state updated successfully');\n          setGame(res.data);\n        }).catch(err => {\n          console.error('Failed to update game state:', err);\n          setError(err.message);\n        });\n        axios.post(`${SERVER_URL}/update_results`, {\n          game_id: gameId,\n          results: newGame.results\n        }).then(res => {\n          console.log('Results updated successfully');\n          setGame(res.data);\n        }).catch(err => {\n          console.error('Failed to update results:', err);\n          setError(err.message);\n        });\n      }\n    }\n  };\n  const renderCircle = React.useCallback(index => {\n    let result = [];\n    for (let i = 0; i < game.players.length; i++) {\n      const player = game.players[i];\n      for (let j = 0; j < game.players[i].balls.length; j++) {\n        if (game.players[i].balls[j].position - 1 === index) {\n          result.push(/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              background: \"gray\",\n              marginTop: \"10px\",\n              padding: 2,\n              display: 'flex',\n              flexDirection: \"row\",\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [player.name, \":\", game.players[i].balls[j].process.sort().join('') === '1' + game.players.map(player => player.index).sort().join('') ? 'end' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 20,\n                height: 20,\n                borderRadius: '50%',\n                background: game.players[i].balls[j].color,\n                ml: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, game.players[i].balls[j].position, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this));\n        }\n      }\n    }\n    return result;\n  }, [game]);\n  const renderGameProgress = () => {\n    const currentRoundResult = game.results[game.currentRound - 1] || {\n      score: 0\n    };\n    const currentPlayer = game.players.find(player => player.id === playerId);\n    const currentBall = currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.balls[currentPlayer.balls.length - 1];\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              mb: 1,\n              color: 'primary.main'\n            },\n            children: [\"Game ID: \", game.gameId, \" \\xA0\\xA0 Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Player Name: \", currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Current Round: \", game.currentRound, \" / \", game.config.rounds, \" Score: \", currentRoundResult.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Remaining time: \", currentPlayer !== null && currentPlayer !== void 0 && currentPlayer.isOwn ? timeLeave : game.remainingTime - 1, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), currentBall && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              p: 2,\n              border: '1px solid #ccc',\n              borderRadius: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: 'text.primary'\n              },\n              children: \"Current Ball Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Color: \", currentBall.color, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), \"Position: \", currentBall.position, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), \"Process: \", currentBall.process.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), \"Owner: \", currentBall.playerId === playerId ? 'You' : 'Other Player']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center items-center\",\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex justify-start flex-wrap\",\n          sx: {\n            width: 1000,\n            height: 1000,\n            position: 'relative'\n          },\n          children: Array(game.config.blocks).fill(0).map((_, index) => {\n            const totalBlocks = game.config.blocks;\n            const radius = 500; // 设定半径\n            const angle = index / totalBlocks * 2 * Math.PI; // 计算角度\n            const centerX = 540; // 圆心 X 坐标\n            const centerY = 540; // 圆心 Y 坐标\n            const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n            const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex flex-col justify-center items-center\",\n              sx: {\n                width: 100,\n                minHeight: 100,\n                border: '1px solid #ccc',\n                mr: 1,\n                mt: 1,\n                background: 'white',\n                position: 'absolute',\n                left: x,\n                top: y\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'black',\n                  whiteSpace: 'wrap',\n                  display: game.players.some(player => player.position - 1 === index) ? 'block' : 'none'\n                },\n                children: [\"Index: \", game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'black',\n                  whiteSpace: 'wrap',\n                  display: 'block'\n                },\n                children: game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: \"column\",\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  width: \"100%\"\n                },\n                children: renderCircle(index).map(item => item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatices = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh',\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3,\n          textAlign: 'center',\n          color: 'primary.main'\n        },\n        children: \"Game Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: () => {\n          setGameId(null);\n          setGame(null);\n          setPlayerId(null);\n          setError(null);\n          setActiveTab(0);\n          setPlayerCount(MAX_PLAYERS);\n          setPlayerName('');\n          setRoundCount(5);\n          setTimeLeave(120);\n          setCount(1);\n        },\n        sx: {\n          mb: 3\n        },\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Current Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: game.results.map((result, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [\"Round \", result.round]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: result.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGame = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              mb: 1,\n              color: 'primary.main'\n            },\n            children: [\"Game ID: \", game.gameId, \" \\xA0\\xA0\", game.players.some(player => player.id === playerId) && game.players.find(player => player.id === playerId).isOwn && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: startGame,\n              disabled: game.status !== 'waiting',\n              children: \"Start Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Current Round: \", game.currentRound]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Round Score target\",\n            type: \"number\",\n            required: true,\n            value: roundCount,\n            onChange: e => setRoundCount(Number(e.target.value)),\n            helperText: \"Round Score target\",\n            sx: {\n              mb: 3,\n              display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none'\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          mb: 3,\n          maxWidth: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: game.results.map((result, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [\"Round \", result.round]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: result.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none'\n        },\n        children: game.players.map((player, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Player Name: \", player.name, \" Index: \", player.index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Position\",\n            type: \"text\",\n            value: player.position,\n            onChange: e => {\n              if (e.target.value < 1 || e.target.value > game.config.blocks) {\n                setError('Position must be between 1 and 20');\n                return;\n              }\n              setError(null);\n              const newGame = {\n                ...game\n              };\n              newGame.players[index].position = Number(e.target.value);\n              // sort players by position\n              const players = JSON.parse(JSON.stringify(newGame.players)).sort((a, b) => a.position - b.position);\n              newGame.players.forEach((player, index) => {\n                players.forEach((p, i) => {\n                  if (player.id === p.id) {\n                    player.index = i + 1;\n                  }\n                });\n              });\n              setGame(newGame);\n              axios.post(`${SERVER_URL}/update_game`, {\n                game_id: gameId,\n                players: newGame.players\n              }).then(res => {\n                setGame(res.data);\n              }).catch(err => {\n                setError(err.message);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center items-center\",\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex justify-start flex-wrap relative\",\n          sx: {\n            width: 1000,\n            height: 1000,\n            position: 'relative'\n          },\n          children: Array(game.config.blocks).fill(0).map((_, index) => {\n            const totalBlocks = game.config.blocks;\n            const radius = 500; // 设定半径\n            const angle = index / totalBlocks * 2 * Math.PI; // 计算角度\n            const centerX = 540; // 圆心 X 坐标\n            const centerY = 540; // 圆心 Y 坐标\n            const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n            const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex flex-col justify-center items-center\",\n              sx: {\n                width: 100,\n                height: 100,\n                border: '1px solid #ccc',\n                mr: 1,\n                mt: 1,\n                background: game.players.some(player => player.position - 1 === index) ? 'blue' : 'white',\n                position: 'absolute',\n                left: x,\n                top: y\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black',\n                  whiteSpace: 'wrap'\n                },\n                children: [\"Index: \", game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black',\n                  whiteSpace: 'wrap'\n                },\n                children: [\"Pos: \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'white',\n                  whiteSpace: 'wrap'\n                },\n                children: game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMainMenu = () => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        width: '100%',\n        mx: 'auto',\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: 'linear-gradient(180deg, #f5f9ff 0%, #e8f3ff 100%)',\n          p: 4,\n          borderTopLeftRadius: 8,\n          borderTopRightRadius: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            fontWeight: 'bold',\n            background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.1)',\n            textAlign: 'center',\n            mb: 1\n          },\n          children: \"Online Multiplayer Ball Point Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: '#ffffff',\n          p: 4,\n          borderBottomLeftRadius: 8,\n          borderBottomRightRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: (e, newValue) => {\n            setActiveTab(newValue);\n            setPlayerName('');\n            setPlayerCount(MAX_PLAYERS);\n            setJoinGameId('');\n            setGame({});\n          },\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"CREATE GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"JOIN GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), activeTab === 0 ?\n        /*#__PURE__*/\n        // Create game form\n        _jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleCreateGame,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            required: true,\n            value: playerName,\n            onChange: e => {\n              if (e.target.value.length > 8) {\n                setError('Name cannot be more than 8 characters');\n              } else {\n                setError('');\n              }\n              setPlayerName(e.target.value);\n            },\n            sx: {\n              mb: 2\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Players\",\n            type: \"number\",\n            required: true,\n            value: playerCount,\n            onChange: e => setPlayerCount(Number(e.target.value)),\n            helperText: \"Requiring 5 players\",\n            sx: {\n              mb: 3\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: !playerName || playerCount < MAX_PLAYERS || playerCount > 10,\n            children: \"Create Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // Join game form\n        _jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleJoinGame,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            required: true,\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value),\n            sx: {\n              mb: 2\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Game Code\",\n            required: true,\n            value: joinGameId,\n            onChange: e => setJoinGameId(e.target.value),\n            sx: {\n              mb: 3\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: !playerName || !joinGameId,\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 11\n    }, this), !gameId ? renderMainMenu() : game.status === 'waiting' ? renderGame() : game.status === 'in_progress' ? renderGameProgress() : game.status === 'end' ? renderStatices() : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 778,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"prWiifn6hqyppxUNmYpvE/fymn4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Alert","CircularProgress","Container","Card","Box","Typography","Tabs","Tab","TextField","Button","TableContainer","Table","TableHead","TableBody","TableCell","TableRow","axios","jsxDEV","_jsxDEV","MAX_PLAYERS","SERVER_URL","process","env","REACT_APP_SERVER_URL","WS_URL","REACT_APP_WS_URL","ws","WebSocket","App","_s","gameId","setGameId","useState","game","setGame","error","setError","activeTab","setActiveTab","playerId","setPlayerId","playerName","setPlayerName","playerCount","setPlayerCount","joinGameId","setJoinGameId","roundCount","setRoundCount","timeLeave","setTimeLeave","count","setCount","useEffect","onmessage","msg","data","JSON","parse","handleKeyDown","e","console","log","key","status","player","players","find","id","balls","ball","length","toLowerCase","color","handleColorMatch","handleEnterKey","handleNewBall","handlePoint","document","addEventListener","timer","setInterval","isOwn","newGame","currentRound","config","rounds","remainingTime","clearInterval","post","game_id","removeEventListener","handleCreateGame","preventDefault","name","player_count","round_count","then","res","catch","err","message","handleJoinGame","startGame","flag","forEach","index","position","blocks","Math","abs","player_id","floor","random","nextPlayer","includes","filter","push","splice","currentPlayer","p","playerWithCompleteBall","some","b","sort","join","map","results","score","updatedPlayer","renderCircle","useCallback","result","i","j","sx","background","marginTop","padding","display","flexDirection","alignItems","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","borderRadius","ml","renderGameProgress","currentRoundResult","currentBall","backgroundColor","minHeight","mb","variant","mt","border","className","Array","fill","_","totalBlocks","radius","angle","PI","centerX","centerY","x","cos","y","sin","mr","left","top","whiteSpace","item","renderStatices","textAlign","fullWidth","type","onClick","size","align","component","scope","round","renderGame","disabled","label","required","value","onChange","Number","target","helperText","autoComplete","maxWidth","stringify","a","renderMainMenu","mx","borderTopLeftRadius","borderTopRightRadius","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","textShadow","borderBottomLeftRadius","borderBottomRightRadius","newValue","onSubmit","severity","_c","$RefreshReg$"],"sources":["/Users/huanghao/Desktop/Ball Point Game/src/App.js"],"sourcesContent":["import React from 'react';\nimport {\n  Alert, CircularProgress, Container, Card, Box, Typography, Tabs, Tab, TextField, Button, TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@mui/material';\nimport axios from 'axios';\n\nconst MAX_PLAYERS = 5\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://172.20.10.4:8080';\nconst WS_URL = process.env.REACT_APP_WS_URL || 'ws://172.20.10.4:8080/ws';\n\nconst ws = new WebSocket(WS_URL);\n\nfunction App() {\n  const [gameId, setGameId] = React.useState(null)\n  const [game, setGame] = React.useState(null)\n  const [error, setError] = React.useState(null)\n\n  const [activeTab, setActiveTab] = React.useState(0)\n  const [playerId, setPlayerId] = React.useState(null)\n  const [playerName, setPlayerName] = React.useState('')\n  const [playerCount, setPlayerCount] = React.useState(MAX_PLAYERS)\n  const [joinGameId, setJoinGameId] = React.useState('')\n  const [roundCount, setRoundCount] = React.useState(5)\n  const [timeLeave, setTimeLeave] = React.useState(120)\n  const [count, setCount] = React.useState(1)\n\n  React.useEffect(() => {\n    // sync with server\n    ws.onmessage = (msg) => {\n      const data = JSON.parse(msg.data)\n      if (data.gameId === gameId) {\n        setGame(data)\n      }\n    }\n    const handleKeyDown = (e) => {\n      // 添加调试信息\n      console.log('Key pressed:', e.key);\n      console.log('Game status:', game?.status);\n      console.log('Player ID:', playerId);\n\n      if (e.key === 'v') {\n        console.log(game);\n        return;\n      }\n\n      // 首先验证游戏状态\n      if (!gameId || !game || game.status !== 'in_progress') {\n        console.log('Game not in progress');\n        return;\n      }\n\n      // 验证当前玩家\n      const player = game.players.find(player => player.id === playerId);\n      if (!player) {\n        console.log('Player not found');\n        return;\n      }\n\n      // 验证玩家是否有球\n      const balls = player.balls;\n      const ball = balls[balls.length - 1];\n      if (!ball) {\n        console.log('No ball available');\n        return;\n      }\n\n      // 验证球是否属于当前玩家\n      if (ball.playerId !== playerId) {\n        console.log('Ball belongs to another player');\n        return;\n      }\n\n      // 处理具体的按键\n      switch (e.key.toLowerCase()) {\n        case 'r':\n          if (ball.color === 'red') {\n            handleColorMatch(ball);\n          }\n          break;\n        case 'g':\n          if (ball.color === 'green') {\n            handleColorMatch(ball);\n          }\n          break;\n        case 'b':\n          if (ball.color === 'blue') {\n            handleColorMatch(ball);\n          }\n          break;\n        case 'enter':\n          handleEnterKey(ball);\n          break;\n        case 'n':\n          handleNewBall();\n          break;\n        case 'p':\n          handlePoint();\n          break;\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown)\n\n    const timer = setInterval(() => {\n      if (game && game.status === 'in_progress' && game.players.find(player => player.id === playerId).isOwn) {\n        const newGame = { ...game }\n        setTimeLeave(timeLeave - 1)\n        if (timeLeave < 0 && newGame.currentRound < newGame.config.rounds) {\n          newGame.currentRound += 1\n          newGame.status = 'waiting'\n          newGame.remainingTime = 120\n          setTimeLeave(120)\n        } else if (timeLeave < 0 && newGame.currentRound === newGame.config.rounds) {\n          newGame.status = 'end'\n          clearInterval(timer)\n        }\n        setGame(newGame)\n        axios.post(`${SERVER_URL}/update_round_time_status`, {\n          game_id: gameId,\n          remainingTime: timeLeave,\n          status: newGame.status,\n          currentRound: newGame.currentRound\n        })\n      }\n    }, 1000)\n    return () => {\n      clearInterval(timer)\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [game, gameId, playerId, timeLeave])\n\n  const handleCreateGame = (e) => {\n    e.preventDefault()\n    axios.post(`${SERVER_URL}/create_game`, {\n      name: playerName,\n      player_count: playerCount,\n      round_count: 5\n    }).then(res => {\n      setGameId(res.data.game.gameId)\n      setGame(res.data.game)\n      setPlayerId(res.data.playerId)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n  const handleJoinGame = (e) => {\n    e.preventDefault()\n    axios.post(`${SERVER_URL}/join_game`, {\n      name: playerName,\n      game_id: joinGameId\n    }).then(res => {\n      setGameId(res.data.game.gameId)\n      setGame(res.data.game)\n      setPlayerId(res.data.playerId)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n  const startGame = () => {\n    // players should be more than 1\n    if (game.players.length < game.config.playerCount) {\n      setError(`Minimum ${game.config.playerCount} players required to start the game`)\n      return\n    }\n    let flag = 0\n    // players positon should be unique\n    // players position should be between 1 and 20\n    // players position should be at least 2 blocks apart\n    game.players.forEach((player, index) => {\n      if (player.position < 1 || player.position > game.config.blocks) {\n        flag = 1\n      }\n      if (index > 0 && Math.abs(player.position - game.players[index - 1].position) < 2) {\n        flag = 2\n      }\n    })\n    if (flag === 1) {\n      setError('Invalid player position')\n      return\n    }\n    if (flag === 2) {\n      setError('Players should be at least 2 blocks apart')\n      return\n    }\n    setTimeLeave(120) // Reset time to 120 seconds when starting the game\n    const newGame = { ...game };\n    newGame.config.roundCount = roundCount;\n    setGame(newGame);\n    axios.post(`${SERVER_URL}/start_game`, {\n      game_id: gameId,\n      player_id: playerId,\n      players: game.players,\n      round_count: roundCount\n    }).then(res => {\n      setGame(res.data)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n  const handleColorMatch = (ball) => {\n    if (count === 2) {\n      ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n      ball.position += 1;\n      if (ball.position > game.config.blocks) {\n        ball.position = 1;\n      }\n      setCount(1);\n    } else {\n      setCount(2);\n    }\n\n    // 更新游戏状态并确认\n    axios.post(`${SERVER_URL}/update_game`, {\n      game_id: gameId,\n      players: game.players\n    })\n    .then(res => {\n      console.log('Game state updated successfully');\n      setGame(res.data);\n    })\n    .catch(err => {\n      console.error('Failed to update game state:', err);\n      setError(err.message);\n    });\n  };\n\n  const handleEnterKey = (ball) => {\n    if (!ball) return;\n\n    const nextPlayer = game.players.find(player => player.position === ball.position);\n    if (nextPlayer && nextPlayer.index !== player.index + 1 && nextPlayer.index !== (player.index - 1 || 1)) {\n      if (ball.process.includes(nextPlayer.index) || ball.process.filter((e) => e === 1).length < 2) {\n        ball.process.push(nextPlayer.index);\n        ball.position = nextPlayer.position;\n        ball.playerId = nextPlayer.id;\n        ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n        nextPlayer.balls = [ball, ...nextPlayer.balls];\n      }\n    }\n    balls.splice(balls.length - 1, 1);\n\n    axios.post(`${SERVER_URL}/update_game`, {\n      game_id: gameId,\n      players: game.players\n    }).then(res => {\n      console.log('Game state updated successfully');\n      setGame(res.data);\n    }).catch(err => {\n      console.error('Failed to update game state:', err);\n      setError(err.message);\n    });\n  };\n\n  const handleNewBall = () => {\n    const player = game.players.find(player => player.id === playerId);\n    if (player.index === 1) {\n      player.balls.push({\n        color: game.config.balls[Math.floor(Math.random() * 3)],\n        position: player.position,\n        process: [player.index],\n        playerId: player.id,\n        index: player.index\n      });\n    }\n\n    axios.post(`${SERVER_URL}/update_game`, {\n      game_id: gameId,\n      players: game.players\n    }).then(res => {\n      console.log('Game state updated successfully');\n      setGame(res.data);\n    }).catch(err => {\n      console.error('Failed to update game state:', err);\n      setError(err.message);\n    });\n  };\n\n  const handlePoint = () => {\n    const currentPlayer = game.players.find(p => p.id === playerId);\n    if (currentPlayer && currentPlayer.index === 1) {\n      const playerWithCompleteBall = game.players.find(player => \n        player.balls.some(b => \n          b.process && \n          b.process.sort().join('') === '1' + game.players.map(p => p.index).sort().join('')\n        )\n      );\n\n      if (playerWithCompleteBall) {\n        const newGame = { ...game };\n        newGame.results[game.currentRound - 1].score += 1;\n        \n        const updatedPlayer = newGame.players.find(p => p.id === playerWithCompleteBall.id);\n        if (updatedPlayer) {\n          updatedPlayer.balls = updatedPlayer.balls.filter(b => \n            !b.process || \n            b.process.sort().join('') !== '1' + game.players.map(p => p.index).sort().join('')\n          );\n        }\n\n        setGame(newGame);\n\n        axios.post(`${SERVER_URL}/update_game`, {\n          game_id: gameId,\n          players: newGame.players\n        }).then(res => {\n          console.log('Game state updated successfully');\n          setGame(res.data);\n        }).catch(err => {\n          console.error('Failed to update game state:', err);\n          setError(err.message);\n        });\n\n        axios.post(`${SERVER_URL}/update_results`, {\n          game_id: gameId,\n          results: newGame.results\n        }).then(res => {\n          console.log('Results updated successfully');\n          setGame(res.data);\n        }).catch(err => {\n          console.error('Failed to update results:', err);\n          setError(err.message);\n        });\n      }\n    }\n  };\n\n  const renderCircle = React.useCallback((index) => {\n    let result = [];\n    for (let i = 0; i < game.players.length; i++) {\n      const player = game.players[i]\n      for (let j = 0; j < game.players[i].balls.length; j++) {\n        if (game.players[i].balls[j].position - 1 === index) {\n          result.push(\n            <Box\n              key={game.players[i].balls[j].position}\n              sx={{\n                background: \"gray\",\n                marginTop: \"10px\",\n                padding: 2,\n                display: 'flex',\n                flexDirection: \"row\",\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}>\n              <span>{player.name}:{game.players[i].balls[j].process.sort().join('') === '1' + game.players.map(player => player.index).sort().join('') ? 'end' : ''}</span>\n              <Box sx={{ width: 20, height: 20, borderRadius: '50%', background: game.players[i].balls[j].color, ml: 1 }} >\n              </Box>\n            </Box>\n          )\n        }\n      }\n    }\n    return result\n  }, [game])\n  const renderGameProgress = () => {\n    const currentRoundResult = game.results[game.currentRound - 1] || { score: 0 };\n    const currentPlayer = game.players.find(player => player.id === playerId);\n    const currentBall = currentPlayer?.balls[currentPlayer.balls.length - 1];\n\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n        <Box sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        }}>\n          <Box>\n            <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n              Game ID: {game.gameId} &nbsp;&nbsp; Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Player Name: {currentPlayer?.name}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Current Round: {game.currentRound} / {game.config.rounds} Score: {currentRoundResult.score}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Remaining time: {currentPlayer?.isOwn ? timeLeave : game.remainingTime - 1} seconds\n            </Typography>\n            {currentBall && (\n              <Box sx={{ mt: 2, p: 2, border: '1px solid #ccc', borderRadius: 1 }}>\n                <Typography variant=\"h6\" sx={{ color: 'text.primary' }}>\n                  Current Ball Status:\n                </Typography>\n                <Typography variant=\"body1\">\n                  Color: {currentBall.color}\n                  <br />\n                  Position: {currentBall.position}\n                  <br />\n                  Process: {currentBall.process.join(', ')}\n                  <br />\n                  Owner: {currentBall.playerId === playerId ? 'You' : 'Other Player'}\n                </Typography>\n              </Box>\n            )}\n          </Box>\n        </Box>\n        <Box className=\"flex justify-center items-center\" sx={{ border: '1px solid #ccc', borderRadius: 1, p: 2 }}>\n          <Box className=\"flex justify-start flex-wrap\" sx={{ width: 1000, height: 1000, position: 'relative' }}>\n            {\n              Array(game.config.blocks).fill(0).map((_, index) => {\n                const totalBlocks = game.config.blocks;\n                const radius = 500; // 设定半径\n                const angle = (index / totalBlocks) * 2 * Math.PI; // 计算角度\n                const centerX = 540; // 圆心 X 坐标\n                const centerY = 540; // 圆心 Y 坐标\n                const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n                const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n                return (\n                  <Box key={index} className=\"flex flex-col justify-center items-center\" sx={{\n                    width: 100,\n                    minHeight: 100,\n                    border: '1px solid #ccc',\n                    mr: 1,\n                    mt: 1,\n                    background: 'white',\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                  }}>\n                    <Typography sx={{ color: 'black', whiteSpace: 'wrap', display: game.players.some(player => player.position - 1 === index) ? 'block' : 'none' }}>\n                      Index: {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : ''}\n                    </Typography>\n                    <Typography sx={{ color: 'black', whiteSpace: 'wrap', display: 'block' }}>\n                      {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''}\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexDirection: \"column\", justifyContent: 'center', alignItems: 'center', width: \"100%\" }}>\n                      {renderCircle(index).map((item) => item)}\n                    </Box>\n                  </Box>\n                )\n              })\n            }\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n\n  const renderStatices = () => {\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh', display: \"flex\", flexDirection: \"column\" }}>\n        <Typography variant=\"h4\" sx={{ mb: 3, textAlign: 'center', color: 'primary.main' }}>\n          Game Summary\n        </Typography>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={() => {\n            setGameId(null)\n            setGame(null)\n            setPlayerId(null)\n            setError(null)\n\n            setActiveTab(0)\n            setPlayerCount(MAX_PLAYERS)\n            setPlayerName('')\n            setRoundCount(5)\n            setTimeLeave(120)\n            setCount(1)\n          }}\n          sx={{ mb: 3 }}\n        >\n          Restart Game\n        </Button>\n        <TableContainer sx={{ mb: 2 }}>\n          <Table size=\"medium\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Round</TableCell>\n                <TableCell align=\"right\">Current Score</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                game.results.map((result, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Round {result.round}\n                    </TableCell>\n                    <TableCell align=\"right\">{result.score}</TableCell>\n                  </TableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    )\n  }\n\n  const renderGame = () => {\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n        <Box sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        }}>\n          <Box>\n            <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n              Game ID: {game.gameId} &nbsp;&nbsp;\n              {\n                game.players.some(player => player.id === playerId) && game.players.find(player => player.id === playerId).isOwn && (\n                  <Button variant=\"contained\" onClick={startGame} disabled={game.status !== 'waiting'}>\n                    Start Game\n                  </Button>\n                )\n              }\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Current Round: {game.currentRound}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n            </Typography>\n            <TextField\n              fullWidth\n              label=\"Round Score target\"\n              type=\"number\"\n              required\n              value={roundCount}\n              onChange={(e) => setRoundCount(Number(e.target.value))}\n              helperText=\"Round Score target\"\n              sx={{ mb: 3, display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none' }}\n              autoComplete=\"off\"\n            />\n          </Box>\n        </Box>\n\n        {/* 添加分数表格 */}\n        <TableContainer sx={{ mb: 3, maxWidth: 400 }}>\n          <Table size=\"medium\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Round</TableCell>\n                <TableCell align=\"right\">Score</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                game.results.map((result, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Round {result.round}\n                    </TableCell>\n                    <TableCell align=\"right\">{result.score}</TableCell>\n                  </TableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Box sx={{ border: '1px solid #ccc', borderRadius: 1, display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none' }}>\n          {\n            game.players.map((player, index) => (\n              <Box key={index} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mt: 1 }}>\n                <Typography variant=\"h6\" sx={{ color: 'text.primary' }}>\n                  Player Name: {player.name} Index: {player.index}\n                </Typography>\n                <TextField\n                  label=\"Position\"\n                  type=\"text\"\n                  value={player.position}\n                  onChange={(e) => {\n                    if (e.target.value < 1 || e.target.value > game.config.blocks) {\n                      setError('Position must be between 1 and 20')\n                      return\n                    }\n                    setError(null)\n                    const newGame = { ...game }\n                    newGame.players[index].position = Number(e.target.value)\n                    // sort players by position\n                    const players = JSON.parse(JSON.stringify(newGame.players)).sort((a, b) => a.position - b.position)\n                    newGame.players.forEach((player, index) => {\n                      players.forEach((p, i) => {\n                        if (player.id === p.id) {\n                          player.index = i + 1\n                        }\n                      })\n                    })\n                    setGame(newGame)\n                    axios.post(`${SERVER_URL}/update_game`, {\n                      game_id: gameId,\n                      players: newGame.players\n                    }).then(res => {\n                      setGame(res.data)\n                    }).catch(err => {\n                      setError(err.message)\n                    })\n                  }}\n                />\n              </Box>\n            ))\n          }\n        </Box>\n        <Box className=\"flex justify-center items-center\" sx={{ border: '1px solid #ccc', borderRadius: 1, p: 2 }}>\n          <Box className=\"flex justify-start flex-wrap relative\" sx={{ width: 1000, height: 1000, position: 'relative' }}>\n            {\n              Array(game.config.blocks).fill(0).map((_, index) => {\n                const totalBlocks = game.config.blocks;\n                const radius = 500; // 设定半径\n                const angle = (index / totalBlocks) * 2 * Math.PI; // 计算角度\n                const centerX = 540; // 圆心 X 坐标\n                const centerY = 540; // 圆心 Y 坐标\n                const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n                const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n                return (\n                  <Box key={index} className=\"flex flex-col justify-center items-center\" sx={{\n                    width: 100,\n                    height: 100,\n                    border: '1px solid #ccc',\n                    mr: 1,\n                    mt: 1,\n                    background: game.players.some(player => player.position - 1 === index) ? 'blue' : 'white',\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                  }}>\n                    <Typography sx={{ color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black', whiteSpace: 'wrap' }}>\n                      Index: {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : ''}\n                    </Typography>\n                    <Typography sx={{ color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black', whiteSpace: 'wrap' }}>\n                      Pos: {index + 1}\n                    </Typography>\n                    <Typography sx={{ color: 'white', whiteSpace: 'wrap' }}>\n                      {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''}\n                    </Typography>\n                  </Box>\n                )\n              })\n            }\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n\n  const renderMainMenu = () => {\n    return (\n      <Card sx={{\n        maxWidth: 600,\n        width: '100%',\n        mx: 'auto',\n        mt: 4\n      }}>\n        {/* Top section with title and subtitle */}\n        <Box sx={{\n          background: 'linear-gradient(180deg, #f5f9ff 0%, #e8f3ff 100%)',\n          p: 4,\n          borderTopLeftRadius: 8,\n          borderTopRightRadius: 8\n        }}>\n          <Typography variant=\"h3\" sx={{\n            fontWeight: 'bold',\n            background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.1)',\n            textAlign: 'center',\n            mb: 1\n          }}>\n            Online Multiplayer Ball Point Game\n          </Typography>\n        </Box>\n\n        {/* Bottom section with form */}\n        <Box sx={{\n          background: '#ffffff',\n          p: 4,\n          borderBottomLeftRadius: 8,\n          borderBottomRightRadius: 8\n        }}>\n          <Tabs value={activeTab} onChange={(e, newValue) => {\n            setActiveTab(newValue);\n            setPlayerName('');\n            setPlayerCount(MAX_PLAYERS);\n            setJoinGameId('');\n            setGame({});\n          }} sx={{ mb: 3 }}>\n            <Tab label=\"CREATE GAME\" />\n            <Tab label=\"JOIN GAME\" />\n          </Tabs>\n\n          {activeTab === 0 ? (\n            // Create game form\n            <Box component=\"form\" onSubmit={handleCreateGame}>\n              <TextField\n                fullWidth\n                label=\"Your Name\"\n                required\n                value={playerName}\n                onChange={(e) => {\n                  if (e.target.value.length > 8) {\n                    setError('Name cannot be more than 8 characters');\n                  } else {\n                    setError('');\n                  }\n                  setPlayerName(e.target.value)\n                }}\n                sx={{ mb: 2 }}\n                autoComplete=\"off\"\n              />\n              <TextField\n                fullWidth\n                label=\"Number of Players\"\n                type=\"number\"\n                required\n                value={playerCount}\n                onChange={(e) => setPlayerCount(Number(e.target.value))}\n                helperText=\"Requiring 5 players\"\n                sx={{ mb: 3 }}\n                autoComplete=\"off\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!playerName || playerCount < MAX_PLAYERS || playerCount > 10}\n              >\n                Create Game\n              </Button>\n            </Box>\n          ) : (\n            // Join game form\n            <Box component=\"form\" onSubmit={handleJoinGame}>\n              <TextField\n                fullWidth\n                label=\"Your Name\"\n                required\n                value={playerName}\n                onChange={(e) => setPlayerName(e.target.value)}\n                sx={{ mb: 2 }}\n                autoComplete=\"off\"\n              />\n              <TextField\n                fullWidth\n                label=\"Game Code\"\n                required\n                value={joinGameId}\n                onChange={(e) => setJoinGameId(e.target.value)}\n                sx={{ mb: 3 }}\n                autoComplete=\"off\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!playerName || !joinGameId}\n              >\n                Join Game\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Card>\n    )\n  }\n\n  return (\n    <Container>\n      {\n        error && (\n          <Alert severity=\"error\" sx={{ mt: 2 }}>\n            {error}\n          </Alert>\n        )\n      }\n      {\n        !gameId ?\n          renderMainMenu() :\n          game.status === 'waiting' ?\n            renderGame() :\n            game.status === 'in_progress' ?\n              renderGameProgress() :\n              game.status === 'end' ? renderStatices() : <CircularProgress />\n      }\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}