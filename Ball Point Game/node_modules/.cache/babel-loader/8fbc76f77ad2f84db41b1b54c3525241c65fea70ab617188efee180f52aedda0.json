{"ast":null,"code":"var _jsxFileName = \"/Users/huanghao/Desktop/Ball Point Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Alert, CircularProgress, Container, Card, Box, Typography, Tabs, Tab, TextField, Button, TableContainer, Table, TableHead, TableBody, TableCell, TableRow } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_PLAYERS = 5;\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://172.20.10.4:8080';\nconst WS_URL = process.env.REACT_APP_WS_URL || 'ws://172.20.10.4:8080/ws';\nconst ws = new WebSocket(WS_URL);\nfunction App() {\n  _s();\n  const [gameId, setGameId] = React.useState(null);\n  const [game, setGame] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [activeTab, setActiveTab] = React.useState(0);\n  const [playerId, setPlayerId] = React.useState(null);\n  const [playerName, setPlayerName] = React.useState('');\n  const [playerCount, setPlayerCount] = React.useState(MAX_PLAYERS);\n  const [joinGameId, setJoinGameId] = React.useState('');\n  const [roundCount, setRoundCount] = React.useState(5);\n  const [timeLeave, setTimeLeave] = React.useState(120);\n  const [count, setCount] = React.useState(1);\n  React.useEffect(() => {\n    // sync with server\n    ws.onmessage = msg => {\n      const data = JSON.parse(msg.data);\n      if (data.gameId === gameId) {\n        setGame(data);\n      }\n    };\n    const handleKeyDown = e => {\n      if (e.key === 'v') {\n        console.log(game);\n        return;\n      }\n      if (gameId && game && game.status === 'in_progress') {\n        const player = game.players.find(player => player.id === playerId);\n        if (!player) {\n          return;\n        }\n        const balls = player.balls;\n        const ball = balls[balls.length - 1];\n\n        // 如果没有球，不处理按键\n        if (!ball) {\n          return;\n        }\n\n        // 按键 r\n        if (e.key === 'r') {\n          if (ball.color === 'red') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n              ball.position += 1;\n              if (ball.position > game.config.blocks) {\n                ball.position = 1;\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            playerId,\n            balls: player.balls\n          });\n        }\n        // 按键 t\n        if (e.key === 't') {\n          if (ball.color === 'yellow') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n              ball.position += 1;\n              if (ball.position > game.config.blocks) {\n                ball.position = 1;\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            playerId,\n            balls: player.balls\n          });\n        }\n        // 按键 y\n        if (e.key === 'y') {\n          if (ball.color === 'green') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n              ball.position += 1;\n              if (ball.position > game.config.blocks) {\n                ball.position = 1;\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            playerId,\n            balls: player.balls\n          });\n        }\n        if (ball && ball.position > game.config.blocks) {\n          balls.splice(balls.length - 1, 1);\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data);\n          }).catch(err => {\n            setError(err.message);\n          });\n        }\n        if (e.key === 'Enter') {\n          if (!ball) {\n            return;\n          }\n          // by ball postion find the player\n          const nextPlayer = game.players.find(player => player.position === ball.position);\n          if (nextPlayer && nextPlayer.index !== player.index + 1 && nextPlayer.index !== (player.index - 1 || 1)) {\n            // player is not the same\n            if (ball.process.includes(nextPlayer.index) || ball.process.filter(e => e === 1).length < 2) {\n              ball.process.push(nextPlayer.index);\n              ball.position = nextPlayer.position;\n              ball.playerId = nextPlayer.id;\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n              nextPlayer.balls = [ball, ...nextPlayer.balls];\n            }\n          }\n          balls.splice(balls.length - 1, 1);\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data);\n          }).catch(err => {\n            setError(err.message);\n          });\n        }\n        // 按键 n\n        if (e.key === 'n') {\n          if (player.index === 1) {\n            player.balls.push({\n              color: game.config.balls[Math.floor(Math.random() * 3)],\n              position: player.position,\n              process: [player.index],\n              playerId: player.id,\n              index: player.index\n            });\n          }\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data);\n          }).catch(err => {\n            setError(err.message);\n          });\n        }\n        if (e.key === 'p') {\n          const currentPlayer = game.players.find(p => p.id === playerId);\n          // 只有 index 1 的玩家可以删除球\n          if (currentPlayer && currentPlayer.index === 1) {\n            // 找到所有玩家中有完成传递球的玩家\n            const playerWithCompleteBall = game.players.find(player => player.balls.some(b => b.process && b.process.sort().join('') === '1' + game.players.map(p => p.index).sort().join('')));\n            if (playerWithCompleteBall) {\n              const newGame = {\n                ...game\n              };\n              // 更新分数\n              newGame.results[game.currentRound - 1].score += 1;\n\n              // 找到对应的玩家并更新他的球\n              const updatedPlayer = newGame.players.find(p => p.id === playerWithCompleteBall.id);\n              if (updatedPlayer) {\n                updatedPlayer.balls = updatedPlayer.balls.filter(b => !b.process || b.process.sort().join('') !== '1' + game.players.map(p => p.index).sort().join(''));\n              }\n              setGame(newGame);\n\n              // 更新游戏状态\n              axios.post(`${SERVER_URL}/update_game`, {\n                gameId,\n                players: newGame.players\n              }).then(res => {\n                setGame(res.data);\n              }).catch(err => {\n                setError(err.message);\n              });\n\n              // 更新分数\n              axios.post(`${SERVER_URL}/update_results`, {\n                gameId,\n                results: newGame.results\n              }).then(res => {\n                setGame(res.data);\n              }).catch(err => {\n                setError(err.message);\n              });\n            }\n          }\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    const timer = setInterval(() => {\n      if (game && game.status === 'in_progress' && game.players.find(player => player.id === playerId).isOwn) {\n        const newGame = {\n          ...game\n        };\n        setTimeLeave(timeLeave - 1);\n        if (timeLeave < 0 && newGame.currentRound < newGame.config.rounds) {\n          newGame.currentRound += 1;\n          newGame.status = 'waiting';\n          newGame.remainingTime = 120;\n          setTimeLeave(120);\n        } else if (timeLeave < 0 && newGame.currentRound === newGame.config.rounds) {\n          newGame.status = 'end';\n          clearInterval(timer);\n        }\n        setGame(newGame);\n        axios.post(`${SERVER_URL}/update_round_time_status`, {\n          gameId,\n          remainingTime: timeLeave,\n          status: newGame.status,\n          currentRound: newGame.currentRound\n        });\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [game, gameId, playerId, timeLeave]);\n  const handleCreateGame = e => {\n    e.preventDefault();\n    axios.post(`${SERVER_URL}/create_game`, {\n      name: playerName,\n      player_count: playerCount,\n      round_count: 5\n    }).then(res => {\n      setGameId(res.data.game.gameId);\n      setGame(res.data.game);\n      setPlayerId(res.data.playerId);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const handleJoinGame = e => {\n    e.preventDefault();\n    axios.post(`${SERVER_URL}/join_game`, {\n      name: playerName,\n      game_id: joinGameId\n    }).then(res => {\n      setGameId(res.data.game.gameId);\n      setGame(res.data.game);\n      setPlayerId(res.data.playerId);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const startGame = () => {\n    // players should be more than 1\n    if (game.players.length < game.config.playerCount) {\n      setError(`Minimum ${game.config.playerCount} players required to start the game`);\n      return;\n    }\n    let flag = 0;\n    // players positon should be unique\n    // players position should be between 1 and 20\n    // players position should be at least 2 blocks apart\n    game.players.forEach((player, index) => {\n      if (player.position < 1 || player.position > game.config.blocks) {\n        flag = 1;\n      }\n      if (index > 0 && Math.abs(player.position - game.players[index - 1].position) < 2) {\n        flag = 2;\n      }\n    });\n    if (flag === 1) {\n      setError('Invalid player position');\n      return;\n    }\n    if (flag === 2) {\n      setError('Players should be at least 2 blocks apart');\n      return;\n    }\n    setTimeLeave(120); // Reset time to 120 seconds when starting the game\n    const newGame = {\n      ...game\n    };\n    newGame.config.roundCount = roundCount;\n    setGame(newGame);\n    axios.post(`${SERVER_URL}/start_game`, {\n      gameId,\n      player_id: playerId,\n      players: game.players,\n      round_count: roundCount\n    }).then(res => {\n      setGame(res.data);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const renderCircle = React.useCallback(index => {\n    let result = [];\n    for (let i = 0; i < game.players.length; i++) {\n      const player = game.players[i];\n      for (let j = 0; j < game.players[i].balls.length; j++) {\n        if (game.players[i].balls[j].position - 1 === index) {\n          result.push(/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              background: \"gray\",\n              marginTop: \"10px\",\n              padding: 2,\n              display: 'flex',\n              flexDirection: \"row\",\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [player.name, \":\", game.players[i].balls[j].process.sort().join('') === '1' + game.players.map(player => player.index).sort().join('') ? 'end' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 20,\n                height: 20,\n                borderRadius: '50%',\n                background: game.players[i].balls[j].color,\n                ml: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, game.players[i].balls[j].position, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this));\n        }\n      }\n    }\n    return result;\n  }, [game]);\n  const renderGameProgress = () => {\n    const currentRoundResult = game.results[game.currentRound - 1] || {\n      score: 0\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              mb: 1,\n              color: 'primary.main'\n            },\n            children: [\"Game ID: \", game.gameId, \" \\xA0\\xA0 Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Player Name: \", game.players.find(player => player.id === playerId).name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Current Round: \", game.currentRound, \" / \", game.config.rounds, \" Score: \", currentRoundResult.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Remaining time: \", game.players.find(player => player.id === playerId).isOwn ? timeLeave : game.remainingTime - 1, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Balls: \", game.players.find(player => player.id === playerId).balls.map(ball => ball.color).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center items-center\",\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex justify-start flex-wrap\",\n          sx: {\n            width: 1000,\n            height: 1000,\n            position: 'relative'\n          },\n          children: Array(game.config.blocks).fill(0).map((_, index) => {\n            const totalBlocks = game.config.blocks;\n            const radius = 500; // 设定半径\n            const angle = index / totalBlocks * 2 * Math.PI; // 计算角度\n            const centerX = 540; // 圆心 X 坐标\n            const centerY = 540; // 圆心 Y 坐标\n            const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n            const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex flex-col justify-center items-center\",\n              sx: {\n                width: 100,\n                minHeight: 100,\n                border: '1px solid #ccc',\n                mr: 1,\n                mt: 1,\n                background: 'white',\n                position: 'absolute',\n                left: x,\n                top: y\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'black',\n                  whiteSpace: 'wrap',\n                  display: game.players.some(player => player.position - 1 === index) ? 'block' : 'none'\n                },\n                children: [\"Index: \", game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'black',\n                  whiteSpace: 'wrap',\n                  display: 'block'\n                },\n                children: game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: \"column\",\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  width: \"100%\"\n                },\n                children: renderCircle(index).map(item => item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatices = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh',\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3,\n          textAlign: 'center',\n          color: 'primary.main'\n        },\n        children: \"Game Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: () => {\n          setGameId(null);\n          setGame(null);\n          setPlayerId(null);\n          setError(null);\n          setActiveTab(0);\n          setPlayerCount(MAX_PLAYERS);\n          setPlayerName('');\n          setRoundCount(5);\n          setTimeLeave(120);\n          setCount(1);\n        },\n        sx: {\n          mb: 3\n        },\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Current Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: game.results.map((result, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [\"Round \", result.round]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: result.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGame = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              mb: 1,\n              color: 'primary.main'\n            },\n            children: [\"Game ID: \", game.gameId, \" \\xA0\\xA0\", game.players.some(player => player.id === playerId) && game.players.find(player => player.id === playerId).isOwn && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: startGame,\n              disabled: game.status !== 'waiting',\n              children: \"Start Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Current Round: \", game.currentRound]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Round Score target\",\n            type: \"number\",\n            required: true,\n            value: roundCount,\n            onChange: e => setRoundCount(Number(e.target.value)),\n            helperText: \"Round Score target\",\n            sx: {\n              mb: 3,\n              display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none'\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          mb: 3,\n          maxWidth: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: game.results.map((result, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [\"Round \", result.round]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: result.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none'\n        },\n        children: game.players.map((player, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Player Name: \", player.name, \" Index: \", player.index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Position\",\n            type: \"text\",\n            value: player.position,\n            onChange: e => {\n              if (e.target.value < 1 || e.target.value > game.config.blocks) {\n                setError('Position must be between 1 and 20');\n                return;\n              }\n              setError(null);\n              const newGame = {\n                ...game\n              };\n              newGame.players[index].position = Number(e.target.value);\n              // sort players by position\n              const players = JSON.parse(JSON.stringify(newGame.players)).sort((a, b) => a.position - b.position);\n              newGame.players.forEach((player, index) => {\n                players.forEach((p, i) => {\n                  if (player.id === p.id) {\n                    player.index = i + 1;\n                  }\n                });\n              });\n              setGame(newGame);\n              axios.post(`${SERVER_URL}/update_game`, {\n                gameId,\n                players: newGame.players\n              }).then(res => {\n                setGame(res.data);\n              }).catch(err => {\n                setError(err.message);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center items-center\",\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex justify-start flex-wrap relative\",\n          sx: {\n            width: 1000,\n            height: 1000,\n            position: 'relative'\n          },\n          children: Array(game.config.blocks).fill(0).map((_, index) => {\n            const totalBlocks = game.config.blocks;\n            const radius = 500; // 设定半径\n            const angle = index / totalBlocks * 2 * Math.PI; // 计算角度\n            const centerX = 540; // 圆心 X 坐标\n            const centerY = 540; // 圆心 Y 坐标\n            const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n            const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex flex-col justify-center items-center\",\n              sx: {\n                width: 100,\n                height: 100,\n                border: '1px solid #ccc',\n                mr: 1,\n                mt: 1,\n                background: game.players.some(player => player.position - 1 === index) ? 'blue' : 'white',\n                position: 'absolute',\n                left: x,\n                top: y\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black',\n                  whiteSpace: 'wrap'\n                },\n                children: [\"Index: \", game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black',\n                  whiteSpace: 'wrap'\n                },\n                children: [\"Pos: \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'white',\n                  whiteSpace: 'wrap'\n                },\n                children: game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMainMenu = () => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        width: '100%',\n        mx: 'auto',\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: 'linear-gradient(180deg, #f5f9ff 0%, #e8f3ff 100%)',\n          p: 4,\n          borderTopLeftRadius: 8,\n          borderTopRightRadius: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            fontWeight: 'bold',\n            background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.1)',\n            textAlign: 'center',\n            mb: 1\n          },\n          children: \"Online Multiplayer Ball Point Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: '#ffffff',\n          p: 4,\n          borderBottomLeftRadius: 8,\n          borderBottomRightRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: (e, newValue) => {\n            setActiveTab(newValue);\n            setPlayerName('');\n            setPlayerCount(MAX_PLAYERS);\n            setJoinGameId('');\n            setGame({});\n          },\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"CREATE GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"JOIN GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), activeTab === 0 ?\n        /*#__PURE__*/\n        // Create game form\n        _jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleCreateGame,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            required: true,\n            value: playerName,\n            onChange: e => {\n              if (e.target.value.length > 8) {\n                setError('Name cannot be more than 8 characters');\n              } else {\n                setError('');\n              }\n              setPlayerName(e.target.value);\n            },\n            sx: {\n              mb: 2\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Players\",\n            type: \"number\",\n            required: true,\n            value: playerCount,\n            onChange: e => setPlayerCount(Number(e.target.value)),\n            helperText: \"Requiring 5 players\",\n            sx: {\n              mb: 3\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: !playerName || playerCount < MAX_PLAYERS || playerCount > 10,\n            children: \"Create Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // Join game form\n        _jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleJoinGame,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            required: true,\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value),\n            sx: {\n              mb: 2\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Game Code\",\n            required: true,\n            value: joinGameId,\n            onChange: e => setJoinGameId(e.target.value),\n            sx: {\n              mb: 3\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: !playerName || !joinGameId,\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 11\n    }, this), !gameId ? renderMainMenu() : game.status === 'waiting' ? renderGame() : game.status === 'in_progress' ? renderGameProgress() : game.status === 'end' ? renderStatices() : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 758,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"prWiifn6hqyppxUNmYpvE/fymn4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Alert","CircularProgress","Container","Card","Box","Typography","Tabs","Tab","TextField","Button","TableContainer","Table","TableHead","TableBody","TableCell","TableRow","axios","jsxDEV","_jsxDEV","MAX_PLAYERS","SERVER_URL","process","env","REACT_APP_SERVER_URL","WS_URL","REACT_APP_WS_URL","ws","WebSocket","App","_s","gameId","setGameId","useState","game","setGame","error","setError","activeTab","setActiveTab","playerId","setPlayerId","playerName","setPlayerName","playerCount","setPlayerCount","joinGameId","setJoinGameId","roundCount","setRoundCount","timeLeave","setTimeLeave","count","setCount","useEffect","onmessage","msg","data","JSON","parse","handleKeyDown","e","key","console","log","status","player","players","find","id","balls","ball","length","color","config","Math","floor","random","position","blocks","post","splice","then","res","catch","err","message","nextPlayer","index","includes","filter","push","currentPlayer","p","playerWithCompleteBall","some","b","sort","join","map","newGame","results","currentRound","score","updatedPlayer","document","addEventListener","timer","setInterval","isOwn","rounds","remainingTime","clearInterval","removeEventListener","handleCreateGame","preventDefault","name","player_count","round_count","handleJoinGame","game_id","startGame","flag","forEach","abs","player_id","renderCircle","useCallback","result","i","j","sx","background","marginTop","padding","display","flexDirection","alignItems","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","borderRadius","ml","renderGameProgress","currentRoundResult","backgroundColor","minHeight","mb","variant","className","border","Array","fill","_","totalBlocks","radius","angle","PI","centerX","centerY","x","cos","y","sin","mr","mt","left","top","whiteSpace","item","renderStatices","textAlign","fullWidth","type","onClick","size","align","component","scope","round","renderGame","disabled","label","required","value","onChange","Number","target","helperText","autoComplete","maxWidth","stringify","a","renderMainMenu","mx","borderTopLeftRadius","borderTopRightRadius","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","textShadow","borderBottomLeftRadius","borderBottomRightRadius","newValue","onSubmit","severity","_c","$RefreshReg$"],"sources":["/Users/huanghao/Desktop/Ball Point Game/src/App.js"],"sourcesContent":["import React from 'react';\nimport {\n  Alert, CircularProgress, Container, Card, Box, Typography, Tabs, Tab, TextField, Button, TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@mui/material';\nimport axios from 'axios';\n\nconst MAX_PLAYERS = 5\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://172.20.10.4:8080';\nconst WS_URL = process.env.REACT_APP_WS_URL || 'ws://172.20.10.4:8080/ws';\n\nconst ws = new WebSocket(WS_URL);\n\nfunction App() {\n  const [gameId, setGameId] = React.useState(null)\n  const [game, setGame] = React.useState(null)\n  const [error, setError] = React.useState(null)\n\n  const [activeTab, setActiveTab] = React.useState(0)\n  const [playerId, setPlayerId] = React.useState(null)\n  const [playerName, setPlayerName] = React.useState('')\n  const [playerCount, setPlayerCount] = React.useState(MAX_PLAYERS)\n  const [joinGameId, setJoinGameId] = React.useState('')\n  const [roundCount, setRoundCount] = React.useState(5)\n  const [timeLeave, setTimeLeave] = React.useState(120)\n  const [count, setCount] = React.useState(1)\n\n  React.useEffect(() => {\n    // sync with server\n    ws.onmessage = (msg) => {\n      const data = JSON.parse(msg.data)\n      if (data.gameId === gameId) {\n        setGame(data)\n      }\n    }\n    const handleKeyDown = (e) => {\n      if (e.key === 'v') {\n        console.log(game);\n        return;\n      }\n      if (gameId && game && game.status === 'in_progress') {\n        const player = game.players.find(player => player.id === playerId)\n        if (!player) {\n          return\n        }\n        const balls = player.balls\n        const ball = balls[balls.length - 1]\n        \n        // 如果没有球，不处理按键\n        if (!ball) {\n          return\n        }\n\n        // 按键 r\n        if (e.key === 'r') {\n          if (ball.color === 'red') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)]\n              ball.position += 1\n              if (ball.position > game.config.blocks) {\n                ball.position = 1\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            playerId,\n            balls: player.balls\n          })\n        }\n        // 按键 t\n        if (e.key === 't') {\n          if (ball.color === 'yellow') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)]\n              ball.position += 1\n              if (ball.position > game.config.blocks) {\n                ball.position = 1\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            playerId,\n            balls: player.balls\n          })\n        }\n        // 按键 y\n        if (e.key === 'y') {\n          if (ball.color === 'green') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)]\n              ball.position += 1\n              if (ball.position > game.config.blocks) {\n                ball.position = 1\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            playerId,\n            balls: player.balls\n          })\n        }\n        if (ball && ball.position > game.config.blocks) {\n          balls.splice(balls.length - 1, 1)\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data)\n          }).catch(err => {\n            setError(err.message)\n          })\n        }\n        if (e.key === 'Enter') {\n          if (!ball) {\n            return;\n          }\n          // by ball postion find the player\n          const nextPlayer = game.players.find(player => player.position === ball.position)\n          if (nextPlayer && nextPlayer.index !== player.index + 1 && nextPlayer.index !== (player.index - 1 || 1)) {\n            // player is not the same\n            if (ball.process.includes(nextPlayer.index) || ball.process.filter((e) => e === 1).length < 2) {\n              ball.process.push(nextPlayer.index)\n              ball.position = nextPlayer.position\n              ball.playerId = nextPlayer.id\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)]\n              nextPlayer.balls = [ball, ...nextPlayer.balls]\n            }\n          }\n          balls.splice(balls.length - 1, 1)\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data)\n          }).catch(err => {\n            setError(err.message)\n          })\n        }\n        // 按键 n\n        if (e.key === 'n') {\n          if (player.index === 1) {\n            player.balls.push({\n              color: game.config.balls[Math.floor(Math.random() * 3)],\n              position: player.position,\n              process: [player.index],\n              playerId: player.id,\n              index: player.index\n            })\n          }\n          axios.post(`${SERVER_URL}/update_game`, {\n            gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data)\n          }).catch(err => {\n            setError(err.message)\n          })\n        }\n\n        if (e.key === 'p') {\n          const currentPlayer = game.players.find(p => p.id === playerId);\n          // 只有 index 1 的玩家可以删除球\n          if (currentPlayer && currentPlayer.index === 1) {\n            // 找到所有玩家中有完成传递球的玩家\n            const playerWithCompleteBall = game.players.find(player => \n              player.balls.some(b => \n                b.process && \n                b.process.sort().join('') === '1' + game.players.map(p => p.index).sort().join('')\n              )\n            );\n\n            if (playerWithCompleteBall) {\n              const newGame = { ...game };\n              // 更新分数\n              newGame.results[game.currentRound - 1].score += 1;\n              \n              // 找到对应的玩家并更新他的球\n              const updatedPlayer = newGame.players.find(p => p.id === playerWithCompleteBall.id);\n              if (updatedPlayer) {\n                updatedPlayer.balls = updatedPlayer.balls.filter(b => \n                  !b.process || \n                  b.process.sort().join('') !== '1' + game.players.map(p => p.index).sort().join('')\n                );\n              }\n\n              setGame(newGame);\n\n              // 更新游戏状态\n              axios.post(`${SERVER_URL}/update_game`, {\n                gameId,\n                players: newGame.players\n              }).then(res => {\n                setGame(res.data);\n              }).catch(err => {\n                setError(err.message);\n              });\n\n              // 更新分数\n              axios.post(`${SERVER_URL}/update_results`, {\n              gameId,\n                results: newGame.results\n          }).then(res => {\n                setGame(res.data);\n          }).catch(err => {\n                setError(err.message);\n              });\n            }\n          }\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown)\n\n    const timer = setInterval(() => {\n      if (game && game.status === 'in_progress' && game.players.find(player => player.id === playerId).isOwn) {\n        const newGame = { ...game }\n        setTimeLeave(timeLeave - 1)\n        if (timeLeave < 0 && newGame.currentRound < newGame.config.rounds) {\n          newGame.currentRound += 1\n          newGame.status = 'waiting'\n          newGame.remainingTime = 120\n          setTimeLeave(120)\n        } else if (timeLeave < 0 && newGame.currentRound === newGame.config.rounds) {\n          newGame.status = 'end'\n          clearInterval(timer)\n        }\n        setGame(newGame)\n        axios.post(`${SERVER_URL}/update_round_time_status`, {\n          gameId,\n          remainingTime: timeLeave,\n          status: newGame.status,\n          currentRound: newGame.currentRound\n        })\n      }\n    }, 1000)\n    return () => {\n      clearInterval(timer)\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [game, gameId, playerId, timeLeave])\n\n  const handleCreateGame = (e) => {\n    e.preventDefault()\n    axios.post(`${SERVER_URL}/create_game`, {\n      name: playerName,\n      player_count: playerCount,\n      round_count: 5\n    }).then(res => {\n      setGameId(res.data.game.gameId)\n      setGame(res.data.game)\n      setPlayerId(res.data.playerId)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n  const handleJoinGame = (e) => {\n    e.preventDefault()\n    axios.post(`${SERVER_URL}/join_game`, {\n      name: playerName,\n      game_id: joinGameId\n    }).then(res => {\n      setGameId(res.data.game.gameId)\n      setGame(res.data.game)\n      setPlayerId(res.data.playerId)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n  const startGame = () => {\n    // players should be more than 1\n    if (game.players.length < game.config.playerCount) {\n      setError(`Minimum ${game.config.playerCount} players required to start the game`)\n      return\n    }\n    let flag = 0\n    // players positon should be unique\n    // players position should be between 1 and 20\n    // players position should be at least 2 blocks apart\n    game.players.forEach((player, index) => {\n      if (player.position < 1 || player.position > game.config.blocks) {\n        flag = 1\n      }\n      if (index > 0 && Math.abs(player.position - game.players[index - 1].position) < 2) {\n        flag = 2\n      }\n    })\n    if (flag === 1) {\n      setError('Invalid player position')\n      return\n    }\n    if (flag === 2) {\n      setError('Players should be at least 2 blocks apart')\n      return\n    }\n    setTimeLeave(120) // Reset time to 120 seconds when starting the game\n    const newGame = { ...game };\n    newGame.config.roundCount = roundCount;\n    setGame(newGame);\n    axios.post(`${SERVER_URL}/start_game`, {\n      gameId,\n      player_id: playerId,\n      players: game.players,\n      round_count: roundCount\n    }).then(res => {\n      setGame(res.data)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n\n  const renderCircle = React.useCallback((index) => {\n    let result = [];\n    for (let i = 0; i < game.players.length; i++) {\n      const player = game.players[i]\n      for (let j = 0; j < game.players[i].balls.length; j++) {\n        if (game.players[i].balls[j].position - 1 === index) {\n          result.push(\n            <Box\n              key={game.players[i].balls[j].position}\n              sx={{\n                background: \"gray\",\n                marginTop: \"10px\",\n                padding: 2,\n                display: 'flex',\n                flexDirection: \"row\",\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}>\n              <span>{player.name}:{game.players[i].balls[j].process.sort().join('') === '1' + game.players.map(player => player.index).sort().join('') ? 'end' : ''}</span>\n              <Box sx={{ width: 20, height: 20, borderRadius: '50%', background: game.players[i].balls[j].color, ml: 1 }} >\n              </Box>\n            </Box>\n          )\n        }\n      }\n    }\n    return result\n  }, [game])\n  const renderGameProgress = () => {\n    const currentRoundResult = game.results[game.currentRound - 1] || { score: 0 };\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n        <Box sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        }}>\n          <Box>\n            <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n              Game ID: {game.gameId} &nbsp;&nbsp; Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Player Name: {game.players.find(player => player.id === playerId).name}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Current Round: {game.currentRound} / {game.config.rounds} Score: {currentRoundResult.score}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Remaining time: {game.players.find(player => player.id === playerId).isOwn ? timeLeave : game.remainingTime - 1} seconds\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Balls: {game.players.find(player => player.id === playerId).balls.map(ball => ball.color).join(', ')}\n            </Typography>\n          </Box>\n        </Box>\n        <Box className=\"flex justify-center items-center\" sx={{ border: '1px solid #ccc', borderRadius: 1, p: 2 }}>\n          <Box className=\"flex justify-start flex-wrap\" sx={{ width: 1000, height: 1000, position: 'relative' }}>\n            {\n              Array(game.config.blocks).fill(0).map((_, index) => {\n                const totalBlocks = game.config.blocks;\n                const radius = 500; // 设定半径\n                const angle = (index / totalBlocks) * 2 * Math.PI; // 计算角度\n                const centerX = 540; // 圆心 X 坐标\n                const centerY = 540; // 圆心 Y 坐标\n                const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n                const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n                return (\n                  <Box key={index} className=\"flex flex-col justify-center items-center\" sx={{\n                    width: 100,\n                    minHeight: 100,\n                    border: '1px solid #ccc',\n                    mr: 1,\n                    mt: 1,\n                    background: 'white',\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                  }}>\n                    <Typography sx={{ color: 'black', whiteSpace: 'wrap', display: game.players.some(player => player.position - 1 === index) ? 'block' : 'none' }}>\n                      Index: {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : ''}\n                    </Typography>\n                    <Typography sx={{ color: 'black', whiteSpace: 'wrap', display: 'block' }}>\n                      {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''}\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexDirection: \"column\", justifyContent: 'center', alignItems: 'center', width: \"100%\" }}>\n                      {renderCircle(index).map((item) => item)}\n                    </Box>\n                  </Box>\n                )\n              })\n            }\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n\n  const renderStatices = () => {\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh', display: \"flex\", flexDirection: \"column\" }}>\n        <Typography variant=\"h4\" sx={{ mb: 3, textAlign: 'center', color: 'primary.main' }}>\n          Game Summary\n        </Typography>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={() => {\n            setGameId(null)\n            setGame(null)\n            setPlayerId(null)\n            setError(null)\n\n            setActiveTab(0)\n            setPlayerCount(MAX_PLAYERS)\n            setPlayerName('')\n            setRoundCount(5)\n            setTimeLeave(120)\n            setCount(1)\n          }}\n          sx={{ mb: 3 }}\n        >\n          Restart Game\n        </Button>\n        <TableContainer sx={{ mb: 2 }}>\n          <Table size=\"medium\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Round</TableCell>\n                <TableCell align=\"right\">Current Score</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                game.results.map((result, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Round {result.round}\n                    </TableCell>\n                    <TableCell align=\"right\">{result.score}</TableCell>\n                  </TableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    )\n  }\n\n  const renderGame = () => {\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n        <Box sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        }}>\n          <Box>\n            <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n              Game ID: {game.gameId} &nbsp;&nbsp;\n              {\n                game.players.some(player => player.id === playerId) && game.players.find(player => player.id === playerId).isOwn && (\n                  <Button variant=\"contained\" onClick={startGame} disabled={game.status !== 'waiting'}>\n                    Start Game\n                  </Button>\n                )\n              }\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Current Round: {game.currentRound}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n            </Typography>\n            <TextField\n              fullWidth\n              label=\"Round Score target\"\n              type=\"number\"\n              required\n              value={roundCount}\n              onChange={(e) => setRoundCount(Number(e.target.value))}\n              helperText=\"Round Score target\"\n              sx={{ mb: 3, display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none' }}\n              autoComplete=\"off\"\n            />\n          </Box>\n        </Box>\n\n        {/* 添加分数表格 */}\n        <TableContainer sx={{ mb: 3, maxWidth: 400 }}>\n          <Table size=\"medium\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Round</TableCell>\n                <TableCell align=\"right\">Score</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                game.results.map((result, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Round {result.round}\n                    </TableCell>\n                    <TableCell align=\"right\">{result.score}</TableCell>\n                  </TableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Box sx={{ border: '1px solid #ccc', borderRadius: 1, display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none' }}>\n          {\n            game.players.map((player, index) => (\n              <Box key={index} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mt: 1 }}>\n                <Typography variant=\"h6\" sx={{ color: 'text.primary' }}>\n                  Player Name: {player.name} Index: {player.index}\n                </Typography>\n                <TextField\n                  label=\"Position\"\n                  type=\"text\"\n                  value={player.position}\n                  onChange={(e) => {\n                    if (e.target.value < 1 || e.target.value > game.config.blocks) {\n                      setError('Position must be between 1 and 20')\n                      return\n                    }\n                    setError(null)\n                    const newGame = { ...game }\n                    newGame.players[index].position = Number(e.target.value)\n                    // sort players by position\n                    const players = JSON.parse(JSON.stringify(newGame.players)).sort((a, b) => a.position - b.position)\n                    newGame.players.forEach((player, index) => {\n                      players.forEach((p, i) => {\n                        if (player.id === p.id) {\n                          player.index = i + 1\n                        }\n                      })\n                    })\n                    setGame(newGame)\n                    axios.post(`${SERVER_URL}/update_game`, {\n                      gameId,\n                      players: newGame.players\n                    }).then(res => {\n                      setGame(res.data)\n                    }).catch(err => {\n                      setError(err.message)\n                    })\n                  }}\n                />\n              </Box>\n            ))\n          }\n        </Box>\n        <Box className=\"flex justify-center items-center\" sx={{ border: '1px solid #ccc', borderRadius: 1, p: 2 }}>\n          <Box className=\"flex justify-start flex-wrap relative\" sx={{ width: 1000, height: 1000, position: 'relative' }}>\n            {\n              Array(game.config.blocks).fill(0).map((_, index) => {\n                const totalBlocks = game.config.blocks;\n                const radius = 500; // 设定半径\n                const angle = (index / totalBlocks) * 2 * Math.PI; // 计算角度\n                const centerX = 540; // 圆心 X 坐标\n                const centerY = 540; // 圆心 Y 坐标\n                const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n                const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n                return (\n                  <Box key={index} className=\"flex flex-col justify-center items-center\" sx={{\n                    width: 100,\n                    height: 100,\n                    border: '1px solid #ccc',\n                    mr: 1,\n                    mt: 1,\n                    background: game.players.some(player => player.position - 1 === index) ? 'blue' : 'white',\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                  }}>\n                    <Typography sx={{ color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black', whiteSpace: 'wrap' }}>\n                      Index: {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : ''}\n                    </Typography>\n                    <Typography sx={{ color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black', whiteSpace: 'wrap' }}>\n                      Pos: {index + 1}\n                    </Typography>\n                    <Typography sx={{ color: 'white', whiteSpace: 'wrap' }}>\n                      {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''}\n                    </Typography>\n                  </Box>\n                )\n              })\n            }\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n\n  const renderMainMenu = () => {\n    return (\n      <Card sx={{\n        maxWidth: 600,\n        width: '100%',\n        mx: 'auto',\n        mt: 4\n      }}>\n        {/* Top section with title and subtitle */}\n        <Box sx={{\n          background: 'linear-gradient(180deg, #f5f9ff 0%, #e8f3ff 100%)',\n          p: 4,\n          borderTopLeftRadius: 8,\n          borderTopRightRadius: 8\n        }}>\n          <Typography variant=\"h3\" sx={{\n            fontWeight: 'bold',\n            background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.1)',\n            textAlign: 'center',\n            mb: 1\n          }}>\n            Online Multiplayer Ball Point Game\n          </Typography>\n        </Box>\n\n        {/* Bottom section with form */}\n        <Box sx={{\n          background: '#ffffff',\n          p: 4,\n          borderBottomLeftRadius: 8,\n          borderBottomRightRadius: 8\n        }}>\n          <Tabs value={activeTab} onChange={(e, newValue) => {\n            setActiveTab(newValue);\n            setPlayerName('');\n            setPlayerCount(MAX_PLAYERS);\n            setJoinGameId('');\n            setGame({});\n          }} sx={{ mb: 3 }}>\n            <Tab label=\"CREATE GAME\" />\n            <Tab label=\"JOIN GAME\" />\n          </Tabs>\n\n          {activeTab === 0 ? (\n            // Create game form\n            <Box component=\"form\" onSubmit={handleCreateGame}>\n              <TextField\n                fullWidth\n                label=\"Your Name\"\n                required\n                value={playerName}\n                onChange={(e) => {\n                  if (e.target.value.length > 8) {\n                    setError('Name cannot be more than 8 characters');\n                  } else {\n                    setError('');\n                  }\n                  setPlayerName(e.target.value)\n                }}\n                sx={{ mb: 2 }}\n                autoComplete=\"off\"\n              />\n              <TextField\n                fullWidth\n                label=\"Number of Players\"\n                type=\"number\"\n                required\n                value={playerCount}\n                onChange={(e) => setPlayerCount(Number(e.target.value))}\n                helperText=\"Requiring 5 players\"\n                sx={{ mb: 3 }}\n                autoComplete=\"off\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!playerName || playerCount < MAX_PLAYERS || playerCount > 10}\n              >\n                Create Game\n              </Button>\n            </Box>\n          ) : (\n            // Join game form\n            <Box component=\"form\" onSubmit={handleJoinGame}>\n              <TextField\n                fullWidth\n                label=\"Your Name\"\n                required\n                value={playerName}\n                onChange={(e) => setPlayerName(e.target.value)}\n                sx={{ mb: 2 }}\n                autoComplete=\"off\"\n              />\n              <TextField\n                fullWidth\n                label=\"Game Code\"\n                required\n                value={joinGameId}\n                onChange={(e) => setJoinGameId(e.target.value)}\n                sx={{ mb: 3 }}\n                autoComplete=\"off\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!playerName || !joinGameId}\n              >\n                Join Game\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Card>\n    )\n  }\n\n  return (\n    <Container>\n      {\n        error && (\n          <Alert severity=\"error\" sx={{ mt: 2 }}>\n            {error}\n          </Alert>\n        )\n      }\n      {\n        !gameId ?\n          renderMainMenu() :\n          game.status === 'waiting' ?\n            renderGame() :\n            game.status === 'in_progress' ?\n              renderGameProgress() :\n              game.status === 'end' ? renderStatices() : <CircularProgress />\n      }\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}