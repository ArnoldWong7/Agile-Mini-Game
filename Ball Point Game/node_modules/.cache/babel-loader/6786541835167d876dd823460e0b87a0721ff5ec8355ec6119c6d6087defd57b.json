{"ast":null,"code":"var _jsxFileName = \"/Users/huanghao/Desktop/Ball Point Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Alert, CircularProgress, Container, Card, Box, Typography, Tabs, Tab, TextField, Button, TableContainer, Table, TableHead, TableBody, TableCell, TableRow } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_PLAYERS = 5;\nconst ws = new WebSocket('ws://localhost:8080/ws');\nfunction App() {\n  _s();\n  const [gameId, setGameId] = React.useState(null);\n  const [game, setGame] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [activeTab, setActiveTab] = React.useState(0);\n  const [playerId, setPlayerId] = React.useState(null);\n  const [playerName, setPlayerName] = React.useState('');\n  const [playerCount, setPlayerCount] = React.useState(MAX_PLAYERS);\n  const [joinGameId, setJoinGameId] = React.useState('');\n  const [roundCount, setRoundCount] = React.useState(5);\n  const [timeLeave, setTimeLeave] = React.useState(120);\n  const [count, setCount] = React.useState(1);\n  React.useEffect(() => {\n    // sync with server\n    ws.onmessage = msg => {\n      const data = JSON.parse(msg.data);\n      if (data.gameId === gameId) {\n        setGame(data);\n      }\n    };\n    const handleKeyDown = e => {\n      if (e.key === 'v') {\n        console.log(game);\n        return;\n      }\n      if (gameId && game && game.status === 'in_progress') {\n        const player = game.players.find(player => player.id === playerId);\n        if (!player) {\n          return;\n        }\n        const balls = player.balls;\n        const ball = balls[balls.length - 1];\n        // 按键 r\n        if (e.key === 'r') {\n          if (ball && ball.color === 'red') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n              ball.position += 1;\n              if (ball.position > game.config.blocks) {\n                ball.position = 1;\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          });\n        }\n        // 按键 g\n        if (e.key === 'g') {\n          if (ball && ball.color === 'green') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n              ball.position += 1;\n              if (ball.position > game.config.blocks) {\n                ball.position = 1;\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          });\n        }\n        // 按键 b\n        if (e.key === 'b') {\n          if (ball && ball.color === 'blue') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n              ball.position += 1;\n              if (ball.position > game.config.blocks) {\n                ball.position = 1;\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          });\n        }\n        if (ball && ball.position > game.config.blocks) {\n          balls.splice(balls.length - 1, 1);\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data);\n          }).catch(err => {\n            setError(err.message);\n          });\n        }\n        if (e.key === 'Enter') {\n          if (!ball) {\n            return;\n          }\n          // by ball postion find the player\n          const nextPlayer = game.players.find(player => player.position === ball.position);\n          if (nextPlayer && nextPlayer.index !== player.index + 1 && nextPlayer.index !== (player.index - 1 || 1)) {\n            // player is not the same\n            if (ball.process.includes(nextPlayer.index) || ball.process.filter(e => e === 1).length < 2) {\n              ball.process.push(nextPlayer.index);\n              ball.position = nextPlayer.position;\n              ball.playerId = nextPlayer.id;\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)];\n              nextPlayer.balls = [ball, ...nextPlayer.balls];\n            }\n          }\n          balls.splice(balls.length - 1, 1);\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data);\n          }).catch(err => {\n            setError(err.message);\n          });\n        }\n        // 按键 n\n        if (e.key === 'n') {\n          if (player.index === 1) {\n            player.balls.push({\n              color: game.config.balls[Math.floor(Math.random() * 3)],\n              position: player.position,\n              process: [player.index],\n              playerId: player.id,\n              index: player.index\n            });\n          }\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data);\n          }).catch(err => {\n            setError(err.message);\n          });\n        }\n        if (e.key === 'p') {\n          const player = game.players.find(player => player.id === playerId);\n          if (!player || !player.balls || player.balls.length === 0) return;\n          const ball = player.balls[player.balls.length - 1];\n          if (ball && ball.process && ball.process.sort().join('') === '1' + game.players.map(p => p.index).sort().join('')) {\n            // Update score\n            const newGame = {\n              ...game\n            };\n            newGame.results[game.currentRound - 1].score += 1;\n\n            // Remove the ball\n            player.balls.splice(player.balls.length - 1, 1);\n\n            // Update game state\n            setGame(newGame);\n\n            // Update server\n            axios.post('http://localhost:8080/update_results', {\n              game_id: gameId,\n              results: newGame.results\n            }).then(() => {\n              axios.post('http://localhost:8080/update_game', {\n                game_id: gameId,\n                players: newGame.players\n              }).then(res => {\n                setGame(res.data);\n              }).catch(err => {\n                setError(err.message);\n              });\n            }).catch(err => {\n              setError(err.message);\n            });\n          }\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    const timer = setInterval(() => {\n      if (game && game.status === 'in_progress' && game.players.find(player => player.id === playerId).isOwn) {\n        const newGame = {\n          ...game\n        };\n        setTimeLeave(timeLeave - 1);\n        if (timeLeave < 0 && newGame.currentRound < newGame.config.rounds) {\n          newGame.currentRound += 1;\n          newGame.status = 'waiting';\n          newGame.remainingTime = 120;\n          setTimeLeave(120);\n        } else if (timeLeave < 0 && newGame.currentRound === newGame.config.rounds) {\n          newGame.status = 'end';\n          clearInterval(timer);\n        }\n        setGame(newGame);\n        axios.post('http://localhost:8080/update_round_time_status', {\n          game_id: gameId,\n          remainingTime: timeLeave,\n          status: newGame.status,\n          currentRound: newGame.currentRound\n        });\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [game, gameId, playerId, timeLeave]);\n  const handleCreateGame = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8080/create_game', {\n      name: playerName,\n      player_count: playerCount,\n      round_count: 5\n    }).then(res => {\n      setGameId(res.data.game.gameId);\n      setGame(res.data.game);\n      setPlayerId(res.data.playerId);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const handleJoinGame = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8080/join_game', {\n      name: playerName,\n      game_id: joinGameId\n    }).then(res => {\n      setGameId(res.data.game.gameId);\n      setGame(res.data.game);\n      setPlayerId(res.data.playerId);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const startGame = () => {\n    // players should be more than 1\n    if (game.players.length < game.config.playerCount) {\n      setError(`Minimum ${game.config.playerCount} players required to start the game`);\n      return;\n    }\n    let flag = 0;\n    // players positon should be unique\n    // players position should be between 1 and 20\n    // players position should be at least 2 blocks apart\n    game.players.forEach((player, index) => {\n      if (player.position < 1 || player.position > game.config.blocks) {\n        flag = 1;\n      }\n      if (index > 0 && Math.abs(player.position - game.players[index - 1].position) < 2) {\n        flag = 2;\n      }\n    });\n    if (flag === 1) {\n      setError('Invalid player position');\n      return;\n    }\n    if (flag === 2) {\n      setError('Players should be at least 2 blocks apart');\n      return;\n    }\n    setTimeLeave(120); // Reset time to 120 seconds when starting the game\n    const newGame = {\n      ...game\n    };\n    newGame.config.roundCount = roundCount;\n    setGame(newGame);\n    axios.post('http://localhost:8080/start_game', {\n      game_id: gameId,\n      player_id: playerId,\n      players: game.players,\n      round_count: roundCount\n    }).then(res => {\n      setGame(res.data);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  };\n  const renderCircle = React.useCallback(index => {\n    let result = [];\n    for (let i = 0; i < game.players.length; i++) {\n      const player = game.players[i];\n      for (let j = 0; j < game.players[i].balls.length; j++) {\n        const ball = game.players[i].balls[j];\n        if (ball && ball.position - 1 === index) {\n          result.push(/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              background: \"gray\",\n              marginTop: \"10px\",\n              padding: 2,\n              display: 'flex',\n              flexDirection: \"row\",\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [player.name, \":\", ball.process && ball.process.sort().join('') === '1' + game.players.map(player => player.index).sort().join('') ? 'end' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 20,\n                height: 20,\n                borderRadius: '50%',\n                background: ball.color,\n                ml: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, `${player.id}-${j}-${ball.position}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this));\n        }\n      }\n    }\n    return result;\n  }, [game]);\n  const renderGameProgress = () => {\n    const currentRoundResult = game.results[game.currentRound - 1] || {\n      score: 0\n    };\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              mb: 1,\n              color: 'primary.main'\n            },\n            children: [\"Game ID: \", game.gameId, \" \\xA0\\xA0 Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Player Name: \", game.players.find(player => player.id === playerId).name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Current Round: \", game.currentRound, \" / \", game.config.rounds, \" Score: \", currentRoundResult.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Remaining time: \", game.players.find(player => player.id === playerId).isOwn ? timeLeave : game.remainingTime - 1, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Balls: \", game.players.find(player => player.id === playerId).balls.map(ball => ball.color).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center items-center\",\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex justify-start flex-wrap\",\n          sx: {\n            width: 1000,\n            height: 1000,\n            position: 'relative'\n          },\n          children: Array(game.config.blocks).fill(0).map((_, index) => {\n            const totalBlocks = game.config.blocks;\n            const radius = 500; // 设定半径\n            const angle = index / totalBlocks * 2 * Math.PI; // 计算角度\n            const centerX = 540; // 圆心 X 坐标\n            const centerY = 540; // 圆心 Y 坐标\n            const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n            const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex flex-col justify-center items-center\",\n              sx: {\n                width: 100,\n                minHeight: 100,\n                border: '1px solid #ccc',\n                mr: 1,\n                mt: 1,\n                background: 'white',\n                position: 'absolute',\n                left: x,\n                top: y\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'black',\n                  whiteSpace: 'wrap',\n                  display: game.players.some(player => player.position - 1 === index) ? 'block' : 'none'\n                },\n                children: [\"Index: \", game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'black',\n                  whiteSpace: 'wrap',\n                  display: 'block'\n                },\n                children: game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: \"column\",\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  width: \"100%\"\n                },\n                children: renderCircle(index).map(item => item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStatices = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh',\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3,\n          textAlign: 'center',\n          color: 'primary.main'\n        },\n        children: \"Game Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        type: \"submit\",\n        onClick: () => {\n          setGameId(null);\n          setGame(null);\n          setPlayerId(null);\n          setError(null);\n          setActiveTab(0);\n          setPlayerCount(MAX_PLAYERS);\n          setPlayerName('');\n          setRoundCount(5);\n          setTimeLeave(120);\n          setCount(1);\n        },\n        sx: {\n          mb: 3\n        },\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"medium\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Current Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: game.results.map((result, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [\"Round \", result.round]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: result.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGame = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              mb: 1,\n              color: 'primary.main'\n            },\n            children: [\"Game ID: \", game.gameId, \" \\xA0\\xA0\", game.players.some(player => player.id === playerId) && game.players.find(player => player.id === playerId).isOwn && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: startGame,\n              disabled: game.status !== 'waiting',\n              children: \"Start Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Current Round: \", game.currentRound]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Round Score target\",\n            type: \"number\",\n            required: true,\n            value: roundCount,\n            onChange: e => setRoundCount(Number(e.target.value)),\n            helperText: \"Round Score target\",\n            sx: {\n              mb: 3,\n              display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none'\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none'\n        },\n        children: game.players.map((player, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: 'text.primary'\n            },\n            children: [\"Player Name: \", player.name, \" Index: \", player.index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Position\",\n            type: \"text\",\n            value: player.position,\n            onChange: e => {\n              if (e.target.value < 1 || e.target.value > game.config.blocks) {\n                setError('Position must be between 1 and 20');\n                return;\n              }\n              setError(null);\n              const newGame = {\n                ...game\n              };\n              newGame.players[index].position = Number(e.target.value);\n              // sort players by position\n              const players = JSON.parse(JSON.stringify(newGame.players)).sort((a, b) => a.position - b.position);\n              newGame.players.forEach((player, index) => {\n                players.forEach((p, i) => {\n                  if (player.id === p.id) {\n                    player.index = i + 1;\n                  }\n                });\n              });\n              setGame(newGame);\n              axios.post('http://localhost:8080/update_game', {\n                game_id: gameId,\n                players: newGame.players\n              }).then(res => {\n                setGame(res.data);\n              }).catch(err => {\n                setError(err.message);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center items-center\",\n        sx: {\n          border: '1px solid #ccc',\n          borderRadius: 1,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"flex justify-start flex-wrap relative\",\n          sx: {\n            width: 1000,\n            height: 1000,\n            position: 'relative'\n          },\n          children: Array(game.config.blocks).fill(0).map((_, index) => {\n            const totalBlocks = game.config.blocks;\n            const radius = 500; // 设定半径\n            const angle = index / totalBlocks * 2 * Math.PI; // 计算角度\n            const centerX = 540; // 圆心 X 坐标\n            const centerY = 540; // 圆心 Y 坐标\n            const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n            const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              className: \"flex flex-col justify-center items-center\",\n              sx: {\n                width: 100,\n                height: 100,\n                border: '1px solid #ccc',\n                mr: 1,\n                mt: 1,\n                background: game.players.some(player => player.position - 1 === index) ? 'blue' : 'white',\n                position: 'absolute',\n                left: x,\n                top: y\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black',\n                  whiteSpace: 'wrap'\n                },\n                children: [\"Index: \", game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black',\n                  whiteSpace: 'wrap'\n                },\n                children: [\"Pos: \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: 'white',\n                  whiteSpace: 'wrap'\n                },\n                children: game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMainMenu = () => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 600,\n        width: '100%',\n        mx: 'auto',\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: 'linear-gradient(180deg, #f5f9ff 0%, #e8f3ff 100%)',\n          p: 4,\n          borderTopLeftRadius: 8,\n          borderTopRightRadius: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            fontWeight: 'bold',\n            background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.1)',\n            textAlign: 'center',\n            mb: 1\n          },\n          children: \"Online Multiplayer Ball Point Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: '#ffffff',\n          p: 4,\n          borderBottomLeftRadius: 8,\n          borderBottomRightRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: (e, newValue) => {\n            setActiveTab(newValue);\n            setPlayerName('');\n            setPlayerCount(MAX_PLAYERS);\n            setJoinGameId('');\n            setGame({});\n          },\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"CREATE GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"JOIN GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this), activeTab === 0 ?\n        /*#__PURE__*/\n        // Create game form\n        _jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleCreateGame,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            required: true,\n            value: playerName,\n            onChange: e => {\n              if (e.target.value.length > 8) {\n                setError('Name cannot be more than 8 characters');\n              } else {\n                setError('');\n              }\n              setPlayerName(e.target.value);\n            },\n            sx: {\n              mb: 2\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Players\",\n            type: \"number\",\n            required: true,\n            value: playerCount,\n            onChange: e => setPlayerCount(Number(e.target.value)),\n            helperText: \"Requiring 5 players\",\n            sx: {\n              mb: 3\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: !playerName || playerCount < MAX_PLAYERS || playerCount > 10,\n            children: \"Create Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // Join game form\n        _jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleJoinGame,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            required: true,\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value),\n            sx: {\n              mb: 2\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Game Code\",\n            required: true,\n            value: joinGameId,\n            onChange: e => setJoinGameId(e.target.value),\n            sx: {\n              mb: 3\n            },\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: !playerName || !joinGameId,\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 11\n    }, this), !gameId ? renderMainMenu() : game.status === 'waiting' ? renderGame() : game.status === 'in_progress' ? renderGameProgress() : game.status === 'end' ? renderStatices() : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 706,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"prWiifn6hqyppxUNmYpvE/fymn4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Alert","CircularProgress","Container","Card","Box","Typography","Tabs","Tab","TextField","Button","TableContainer","Table","TableHead","TableBody","TableCell","TableRow","axios","jsxDEV","_jsxDEV","MAX_PLAYERS","ws","WebSocket","App","_s","gameId","setGameId","useState","game","setGame","error","setError","activeTab","setActiveTab","playerId","setPlayerId","playerName","setPlayerName","playerCount","setPlayerCount","joinGameId","setJoinGameId","roundCount","setRoundCount","timeLeave","setTimeLeave","count","setCount","useEffect","onmessage","msg","data","JSON","parse","handleKeyDown","e","key","console","log","status","player","players","find","id","balls","ball","length","color","config","Math","floor","random","position","blocks","post","game_id","splice","then","res","catch","err","message","nextPlayer","index","process","includes","filter","push","sort","join","map","p","newGame","results","currentRound","score","document","addEventListener","timer","setInterval","isOwn","rounds","remainingTime","clearInterval","removeEventListener","handleCreateGame","preventDefault","name","player_count","round_count","handleJoinGame","startGame","flag","forEach","abs","player_id","renderCircle","useCallback","result","i","j","sx","background","marginTop","padding","display","flexDirection","alignItems","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","borderRadius","ml","renderGameProgress","currentRoundResult","backgroundColor","minHeight","mb","variant","className","border","Array","fill","_","totalBlocks","radius","angle","PI","centerX","centerY","x","cos","y","sin","mr","mt","left","top","whiteSpace","some","item","renderStatices","textAlign","fullWidth","type","onClick","size","align","component","scope","round","renderGame","disabled","label","required","value","onChange","Number","target","helperText","autoComplete","stringify","a","b","renderMainMenu","maxWidth","mx","borderTopLeftRadius","borderTopRightRadius","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","textShadow","borderBottomLeftRadius","borderBottomRightRadius","newValue","onSubmit","severity","_c","$RefreshReg$"],"sources":["/Users/huanghao/Desktop/Ball Point Game/src/App.js"],"sourcesContent":["import React from 'react';\nimport {\n  Alert, CircularProgress, Container, Card, Box, Typography, Tabs, Tab, TextField, Button, TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@mui/material';\nimport axios from 'axios';\n\nconst MAX_PLAYERS = 5\n\nconst ws = new WebSocket('ws://localhost:8080/ws')\n\nfunction App() {\n  const [gameId, setGameId] = React.useState(null)\n  const [game, setGame] = React.useState(null)\n  const [error, setError] = React.useState(null)\n\n  const [activeTab, setActiveTab] = React.useState(0)\n  const [playerId, setPlayerId] = React.useState(null)\n  const [playerName, setPlayerName] = React.useState('')\n  const [playerCount, setPlayerCount] = React.useState(MAX_PLAYERS)\n  const [joinGameId, setJoinGameId] = React.useState('')\n  const [roundCount, setRoundCount] = React.useState(5)\n  const [timeLeave, setTimeLeave] = React.useState(120)\n  const [count, setCount] = React.useState(1)\n\n  React.useEffect(() => {\n    // sync with server\n    ws.onmessage = (msg) => {\n      const data = JSON.parse(msg.data)\n      if (data.gameId === gameId) {\n        setGame(data)\n      }\n    }\n    const handleKeyDown = (e) => {\n      if (e.key === 'v') {\n        console.log(game);\n        return;\n      }\n      if (gameId && game && game.status === 'in_progress') {\n        const player = game.players.find(player => player.id === playerId)\n        if (!player) {\n          return\n        }\n        const balls = player.balls\n        const ball = balls[balls.length - 1]\n        // 按键 r\n        if (e.key === 'r') {\n          if (ball && ball.color === 'red') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)]\n              ball.position += 1\n              if (ball.position > game.config.blocks) {\n                ball.position = 1\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          })\n        }\n        // 按键 g\n        if (e.key === 'g') {\n          if (ball && ball.color === 'green') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)]\n              ball.position += 1\n              if (ball.position > game.config.blocks) {\n                ball.position = 1\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          })\n        }\n        // 按键 b\n        if (e.key === 'b') {\n          if (ball && ball.color === 'blue') {\n            if (count === 2) {\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)]\n              ball.position += 1\n              if (ball.position > game.config.blocks) {\n                ball.position = 1\n              }\n              setCount(1);\n            } else {\n              setCount(2);\n            }\n          }\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          })\n        }\n        if (ball && ball.position > game.config.blocks) {\n          balls.splice(balls.length - 1, 1)\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data)\n          }).catch(err => {\n            setError(err.message)\n          })\n        }\n        if (e.key === 'Enter') {\n          if (!ball) {\n            return;\n          }\n          // by ball postion find the player\n          const nextPlayer = game.players.find(player => player.position === ball.position)\n          if (nextPlayer && nextPlayer.index !== player.index + 1 && nextPlayer.index !== (player.index - 1 || 1)) {\n            // player is not the same\n            if (ball.process.includes(nextPlayer.index) || ball.process.filter((e) => e === 1).length < 2) {\n              ball.process.push(nextPlayer.index)\n              ball.position = nextPlayer.position\n              ball.playerId = nextPlayer.id\n              ball.color = game.config.balls[Math.floor(Math.random() * 3)]\n              nextPlayer.balls = [ball, ...nextPlayer.balls]\n            }\n          }\n          balls.splice(balls.length - 1, 1)\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data)\n          }).catch(err => {\n            setError(err.message)\n          })\n        }\n        // 按键 n\n        if (e.key === 'n') {\n          if (player.index === 1) {\n            player.balls.push({\n              color: game.config.balls[Math.floor(Math.random() * 3)],\n              position: player.position,\n              process: [player.index],\n              playerId: player.id,\n              index: player.index\n            })\n          }\n          axios.post('http://localhost:8080/update_game', {\n            game_id: gameId,\n            players: game.players\n          }).then(res => {\n            setGame(res.data)\n          }).catch(err => {\n            setError(err.message)\n          })\n        }\n\n        if (e.key === 'p') {\n          const player = game.players.find(player => player.id === playerId);\n          if (!player || !player.balls || player.balls.length === 0) return;\n          \n          const ball = player.balls[player.balls.length - 1];\n          if (ball && ball.process && ball.process.sort().join('') === '1' + game.players.map(p => p.index).sort().join('')) {\n            // Update score\n            const newGame = { ...game };\n            newGame.results[game.currentRound - 1].score += 1;\n            \n            // Remove the ball\n            player.balls.splice(player.balls.length - 1, 1);\n            \n            // Update game state\n            setGame(newGame);\n            \n            // Update server\n            axios.post('http://localhost:8080/update_results', {\n              game_id: gameId,\n              results: newGame.results\n            }).then(() => {\n              axios.post('http://localhost:8080/update_game', {\n                game_id: gameId,\n                players: newGame.players\n              }).then(res => {\n                setGame(res.data);\n              }).catch(err => {\n                setError(err.message);\n              });\n            }).catch(err => {\n              setError(err.message);\n            });\n          }\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown)\n\n    const timer = setInterval(() => {\n      if (game && game.status === 'in_progress' && game.players.find(player => player.id === playerId).isOwn) {\n        const newGame = { ...game }\n        setTimeLeave(timeLeave - 1)\n        if (timeLeave < 0 && newGame.currentRound < newGame.config.rounds) {\n          newGame.currentRound += 1\n          newGame.status = 'waiting'\n          newGame.remainingTime = 120\n          setTimeLeave(120)\n        } else if (timeLeave < 0 && newGame.currentRound === newGame.config.rounds) {\n          newGame.status = 'end'\n          clearInterval(timer)\n        }\n        setGame(newGame)\n        axios.post('http://localhost:8080/update_round_time_status', {\n          game_id: gameId,\n          remainingTime: timeLeave,\n          status: newGame.status,\n          currentRound: newGame.currentRound\n        })\n      }\n    }, 1000)\n    return () => {\n      clearInterval(timer)\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [game, gameId, playerId, timeLeave])\n\n  const handleCreateGame = (e) => {\n    e.preventDefault()\n    axios.post('http://localhost:8080/create_game', {\n      name: playerName,\n      player_count: playerCount,\n      round_count: 5\n    }).then(res => {\n      setGameId(res.data.game.gameId)\n      setGame(res.data.game)\n      setPlayerId(res.data.playerId)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n  const handleJoinGame = (e) => {\n    e.preventDefault()\n    axios.post('http://localhost:8080/join_game', {\n      name: playerName,\n      game_id: joinGameId\n    }).then(res => {\n      setGameId(res.data.game.gameId)\n      setGame(res.data.game)\n      setPlayerId(res.data.playerId)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n  const startGame = () => {\n    // players should be more than 1\n    if (game.players.length < game.config.playerCount) {\n      setError(`Minimum ${game.config.playerCount} players required to start the game`)\n      return\n    }\n    let flag = 0\n    // players positon should be unique\n    // players position should be between 1 and 20\n    // players position should be at least 2 blocks apart\n    game.players.forEach((player, index) => {\n      if (player.position < 1 || player.position > game.config.blocks) {\n        flag = 1\n      }\n      if (index > 0 && Math.abs(player.position - game.players[index - 1].position) < 2) {\n        flag = 2\n      }\n    })\n    if (flag === 1) {\n      setError('Invalid player position')\n      return\n    }\n    if (flag === 2) {\n      setError('Players should be at least 2 blocks apart')\n      return\n    }\n    setTimeLeave(120) // Reset time to 120 seconds when starting the game\n    const newGame = { ...game };\n    newGame.config.roundCount = roundCount;\n    setGame(newGame);\n    axios.post('http://localhost:8080/start_game', {\n      game_id: gameId,\n      player_id: playerId,\n      players: game.players,\n      round_count: roundCount\n    }).then(res => {\n      setGame(res.data)\n      setError(null)\n    }).catch(err => {\n      setError(err.message)\n    })\n  }\n\n\n  const renderCircle = React.useCallback((index) => {\n    let result = [];\n    for (let i = 0; i < game.players.length; i++) {\n      const player = game.players[i]\n      for (let j = 0; j < game.players[i].balls.length; j++) {\n        const ball = game.players[i].balls[j];\n        if (ball && ball.position - 1 === index) {\n          result.push(\n            <Box\n              key={`${player.id}-${j}-${ball.position}`}\n              sx={{\n                background: \"gray\",\n                marginTop: \"10px\",\n                padding: 2,\n                display: 'flex',\n                flexDirection: \"row\",\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}>\n              <span>{player.name}:{ball.process && ball.process.sort().join('') === '1' + game.players.map(player => player.index).sort().join('') ? 'end' : ''}</span>\n              <Box sx={{ width: 20, height: 20, borderRadius: '50%', background: ball.color, ml: 1 }} >\n              </Box>\n            </Box>\n          )\n        }\n      }\n    }\n    return result\n  }, [game])\n  const renderGameProgress = () => {\n    const currentRoundResult = game.results[game.currentRound - 1] || { score: 0 };\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n        <Box sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        }}>\n          <Box>\n            <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n              Game ID: {game.gameId} &nbsp;&nbsp; Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Player Name: {game.players.find(player => player.id === playerId).name}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Current Round: {game.currentRound} / {game.config.rounds} Score: {currentRoundResult.score}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Remaining time: {game.players.find(player => player.id === playerId).isOwn ? timeLeave : game.remainingTime - 1} seconds\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Balls: {game.players.find(player => player.id === playerId).balls.map(ball => ball.color).join(', ')}\n            </Typography>\n          </Box>\n        </Box>\n        <Box className=\"flex justify-center items-center\" sx={{ border: '1px solid #ccc', borderRadius: 1, p: 2 }}>\n          <Box className=\"flex justify-start flex-wrap\" sx={{ width: 1000, height: 1000, position: 'relative' }}>\n            {\n              Array(game.config.blocks).fill(0).map((_, index) => {\n                const totalBlocks = game.config.blocks;\n                const radius = 500; // 设定半径\n                const angle = (index / totalBlocks) * 2 * Math.PI; // 计算角度\n                const centerX = 540; // 圆心 X 坐标\n                const centerY = 540; // 圆心 Y 坐标\n                const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n                const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n                return (\n                  <Box key={index} className=\"flex flex-col justify-center items-center\" sx={{\n                    width: 100,\n                    minHeight: 100,\n                    border: '1px solid #ccc',\n                    mr: 1,\n                    mt: 1,\n                    background: 'white',\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                  }}>\n                    <Typography sx={{ color: 'black', whiteSpace: 'wrap', display: game.players.some(player => player.position - 1 === index) ? 'block' : 'none' }}>\n                      Index: {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : ''}\n                    </Typography>\n                    <Typography sx={{ color: 'black', whiteSpace: 'wrap', display: 'block' }}>\n                      {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''}\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexDirection: \"column\", justifyContent: 'center', alignItems: 'center', width: \"100%\" }}>\n                      {renderCircle(index).map((item) => item)}\n                    </Box>\n                  </Box>\n                )\n              })\n            }\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n\n  const renderStatices = () => {\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh', display: \"flex\", flexDirection: \"column\" }}>\n        <Typography variant=\"h4\" sx={{ mb: 3, textAlign: 'center', color: 'primary.main' }}>\n          Game Summary\n        </Typography>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={() => {\n            setGameId(null)\n            setGame(null)\n            setPlayerId(null)\n            setError(null)\n\n            setActiveTab(0)\n            setPlayerCount(MAX_PLAYERS)\n            setPlayerName('')\n            setRoundCount(5)\n            setTimeLeave(120)\n            setCount(1)\n          }}\n          sx={{ mb: 3 }}\n        >\n          Restart Game\n        </Button>\n        <TableContainer sx={{ mb: 2 }}>\n          <Table size=\"medium\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Round</TableCell>\n                <TableCell align=\"right\">Current Score</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                game.results.map((result, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      Round {result.round}\n                    </TableCell>\n                    <TableCell align=\"right\">{result.score}</TableCell>\n                  </TableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    )\n  }\n\n  const renderGame = () => {\n    return (\n      <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n        <Box sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        }}>\n          <Box>\n            <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n              Game ID: {game.gameId} &nbsp;&nbsp;\n              {\n                game.players.some(player => player.id === playerId) && game.players.find(player => player.id === playerId).isOwn && (\n                  <Button variant=\"contained\" onClick={startGame} disabled={game.status !== 'waiting'}>\n                    Start Game\n                  </Button>\n                )\n              }\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Current Round: {game.currentRound}\n            </Typography>\n            <Typography variant=\"h5\" sx={{ color: 'text.primary' }}>\n              Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n            </Typography>\n            <TextField\n              fullWidth\n              label=\"Round Score target\"\n              type=\"number\"\n              required\n              value={roundCount}\n              onChange={(e) => setRoundCount(Number(e.target.value))}\n              helperText=\"Round Score target\"\n              sx={{ mb: 3, display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none' }}\n              autoComplete=\"off\"\n            />\n          </Box>\n        </Box>\n        <Box sx={{ border: '1px solid #ccc', borderRadius: 1, display: game.players.find(player => player.id === playerId).isOwn ? 'block' : 'none' }}>\n          {\n            game.players.map((player, index) => (\n              <Box key={index} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mt: 1 }}>\n                <Typography variant=\"h6\" sx={{ color: 'text.primary' }}>\n                  Player Name: {player.name} Index: {player.index}\n                </Typography>\n                <TextField\n                  label=\"Position\"\n                  type=\"text\"\n                  value={player.position}\n                  onChange={(e) => {\n                    if (e.target.value < 1 || e.target.value > game.config.blocks) {\n                      setError('Position must be between 1 and 20')\n                      return\n                    }\n                    setError(null)\n                    const newGame = { ...game }\n                    newGame.players[index].position = Number(e.target.value)\n                    // sort players by position\n                    const players = JSON.parse(JSON.stringify(newGame.players)).sort((a, b) => a.position - b.position)\n                    newGame.players.forEach((player, index) => {\n                      players.forEach((p, i) => {\n                        if (player.id === p.id) {\n                          player.index = i + 1\n                        }\n                      })\n                    })\n                    setGame(newGame)\n                    axios.post('http://localhost:8080/update_game', {\n                      game_id: gameId,\n                      players: newGame.players\n                    }).then(res => {\n                      setGame(res.data)\n                    }).catch(err => {\n                      setError(err.message)\n                    })\n                  }}\n                />\n              </Box>\n            ))\n          }\n        </Box>\n        <Box className=\"flex justify-center items-center\" sx={{ border: '1px solid #ccc', borderRadius: 1, p: 2 }}>\n          <Box className=\"flex justify-start flex-wrap relative\" sx={{ width: 1000, height: 1000, position: 'relative' }}>\n            {\n              Array(game.config.blocks).fill(0).map((_, index) => {\n                const totalBlocks = game.config.blocks;\n                const radius = 500; // 设定半径\n                const angle = (index / totalBlocks) * 2 * Math.PI; // 计算角度\n                const centerX = 540; // 圆心 X 坐标\n                const centerY = 540; // 圆心 Y 坐标\n                const x = centerX + radius * Math.cos(angle) - 50; // X 位置（调整偏移量）\n                const y = centerY + radius * Math.sin(angle) - 50; // Y 位置（调整偏移量）\n\n                return (\n                  <Box key={index} className=\"flex flex-col justify-center items-center\" sx={{\n                    width: 100,\n                    height: 100,\n                    border: '1px solid #ccc',\n                    mr: 1,\n                    mt: 1,\n                    background: game.players.some(player => player.position - 1 === index) ? 'blue' : 'white',\n                    position: 'absolute',\n                    left: x,\n                    top: y,\n                  }}>\n                    <Typography sx={{ color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black', whiteSpace: 'wrap' }}>\n                      Index: {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).index : ''}\n                    </Typography>\n                    <Typography sx={{ color: game.players.some(player => player.position - 1 === index) ? 'white' : 'black', whiteSpace: 'wrap' }}>\n                      Pos: {index + 1}\n                    </Typography>\n                    <Typography sx={{ color: 'white', whiteSpace: 'wrap' }}>\n                      {game.players.some(player => player.position - 1 === index) ? game.players.find(player => player.position - 1 === index).name : ''}\n                    </Typography>\n                  </Box>\n                )\n              })\n            }\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n\n  const renderMainMenu = () => {\n    return (\n      <Card sx={{\n        maxWidth: 600,\n        width: '100%',\n        mx: 'auto',\n        mt: 4\n      }}>\n        {/* Top section with title and subtitle */}\n        <Box sx={{\n          background: 'linear-gradient(180deg, #f5f9ff 0%, #e8f3ff 100%)',\n          p: 4,\n          borderTopLeftRadius: 8,\n          borderTopRightRadius: 8\n        }}>\n          <Typography variant=\"h3\" sx={{\n            fontWeight: 'bold',\n            background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.1)',\n            textAlign: 'center',\n            mb: 1\n          }}>\n            Online Multiplayer Ball Point Game\n          </Typography>\n        </Box>\n\n        {/* Bottom section with form */}\n        <Box sx={{\n          background: '#ffffff',\n          p: 4,\n          borderBottomLeftRadius: 8,\n          borderBottomRightRadius: 8\n        }}>\n          <Tabs value={activeTab} onChange={(e, newValue) => {\n            setActiveTab(newValue);\n            setPlayerName('');\n            setPlayerCount(MAX_PLAYERS);\n            setJoinGameId('');\n            setGame({});\n          }} sx={{ mb: 3 }}>\n            <Tab label=\"CREATE GAME\" />\n            <Tab label=\"JOIN GAME\" />\n          </Tabs>\n\n          {activeTab === 0 ? (\n            // Create game form\n            <Box component=\"form\" onSubmit={handleCreateGame}>\n              <TextField\n                fullWidth\n                label=\"Your Name\"\n                required\n                value={playerName}\n                onChange={(e) => {\n                  if (e.target.value.length > 8) {\n                    setError('Name cannot be more than 8 characters');\n                  } else {\n                    setError('');\n                  }\n                  setPlayerName(e.target.value)\n                }}\n                sx={{ mb: 2 }}\n                autoComplete=\"off\"\n              />\n              <TextField\n                fullWidth\n                label=\"Number of Players\"\n                type=\"number\"\n                required\n                value={playerCount}\n                onChange={(e) => setPlayerCount(Number(e.target.value))}\n                helperText=\"Requiring 5 players\"\n                sx={{ mb: 3 }}\n                autoComplete=\"off\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!playerName || playerCount < MAX_PLAYERS || playerCount > 10}\n              >\n                Create Game\n              </Button>\n            </Box>\n          ) : (\n            // Join game form\n            <Box component=\"form\" onSubmit={handleJoinGame}>\n              <TextField\n                fullWidth\n                label=\"Your Name\"\n                required\n                value={playerName}\n                onChange={(e) => setPlayerName(e.target.value)}\n                sx={{ mb: 2 }}\n                autoComplete=\"off\"\n              />\n              <TextField\n                fullWidth\n                label=\"Game Code\"\n                required\n                value={joinGameId}\n                onChange={(e) => setJoinGameId(e.target.value)}\n                sx={{ mb: 3 }}\n                autoComplete=\"off\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={!playerName || !joinGameId}\n              >\n                Join Game\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Card>\n    )\n  }\n\n  return (\n    <Container>\n      {\n        error && (\n          <Alert severity=\"error\" sx={{ mt: 2 }}>\n            {error}\n          </Alert>\n        )\n      }\n      {\n        !gameId ?\n          renderMainMenu() :\n          game.status === 'waiting' ?\n            renderGame() :\n            game.status === 'in_progress' ?\n              renderGameProgress() :\n              game.status === 'end' ? renderStatices() : <CircularProgress />\n      }\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}