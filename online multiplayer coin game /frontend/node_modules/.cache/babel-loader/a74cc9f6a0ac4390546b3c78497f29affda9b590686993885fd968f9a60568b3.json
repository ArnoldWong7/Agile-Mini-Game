{"ast":null,"code":"var _jsxFileName = \"/Users/huanghao/Desktop/online multiplayer coin game 2/frontend/src/components/SubBatchDisplay.tsx\";\nimport React from 'react';\nimport { Box, Typography, Button, Grid, Paper } from '@mui/material';\nimport { TaskType, TaskStatus } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubBatchDisplay = ({\n  batchNumber,\n  subBatchNumber,\n  tasks,\n  isActive,\n  canExecute,\n  onFlipCoin,\n  onCompleteSubBatch,\n  flippedCoins,\n  flippingCoins\n}) => {\n  const completedTasks = tasks.filter(t => t.status === TaskStatus.COMPLETED);\n  const allTasksCompleted = tasks.length > 0 && completedTasks.length === tasks.length;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2,\n      mb: 2,\n      opacity: isActive ? 1 : 0.5,\n      pointerEvents: isActive ? 'auto' : 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        children: [\"Sub-batch \", subBatchNumber + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: [\"Progress: \", completedTasks.length, \"/\", tasks.length, \" coins flipped\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      sx: {\n        mb: 2\n      },\n      children: tasks.map(task => {\n        var _flippingCoins$task$i;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 60,\n              height: 60,\n              borderRadius: '50%',\n              backgroundColor: task.type === TaskType.HEADS ? '#FFD700' : '#C0C0C0',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: canExecute ? 'pointer' : 'default',\n              transition: 'transform 0.3s',\n              transform: (_flippingCoins$task$i = flippingCoins[task.id]) !== null && _flippingCoins$task$i !== void 0 && _flippingCoins$task$i.isFlipping ? 'rotateY(180deg)' : flippedCoins.includes(task.id) ? 'rotateY(180deg)' : 'rotateY(0deg)',\n              '&:hover': {\n                transform: canExecute ? flippedCoins.includes(task.id) ? 'rotateY(180deg) scale(1.1)' : 'rotateY(0deg) scale(1.1)' : undefined\n              }\n            },\n            onClick: () => canExecute && onFlipCoin(task.id),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: task.type === TaskType.HEADS ? 'H' : 'T'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), allTasksCompleted && canExecute && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: onCompleteSubBatch,\n      fullWidth: true,\n      children: [\"Complete Sub-batch \", subBatchNumber + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = SubBatchDisplay;\nexport default SubBatchDisplay;\nvar _c;\n$RefreshReg$(_c, \"SubBatchDisplay\");","map":{"version":3,"names":["React","Box","Typography","Button","Grid","Paper","TaskType","TaskStatus","jsxDEV","_jsxDEV","SubBatchDisplay","batchNumber","subBatchNumber","tasks","isActive","canExecute","onFlipCoin","onCompleteSubBatch","flippedCoins","flippingCoins","completedTasks","filter","t","status","COMPLETED","allTasksCompleted","length","elevation","sx","p","mb","opacity","pointerEvents","children","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","container","spacing","map","task","_flippingCoins$task$i","item","width","height","borderRadius","backgroundColor","type","HEADS","display","alignItems","justifyContent","cursor","transition","transform","id","isFlipping","includes","undefined","onClick","fullWidth","_c","$RefreshReg$"],"sources":["/Users/huanghao/Desktop/online multiplayer coin game 2/frontend/src/components/SubBatchDisplay.tsx"],"sourcesContent":["import React from 'react';\nimport {\n    Box,\n    Typography,\n    Button,\n    CircularProgress,\n    Grid,\n    Paper\n} from '@mui/material';\nimport { Task, TaskType, TaskStatus, SubBatchStatus } from '../types';\n\ninterface SubBatchDisplayProps {\n    batchNumber: number;\n    subBatchNumber: number;\n    tasks: Task[];\n    isActive: boolean;\n    canExecute: boolean;\n    onFlipCoin: (taskId: string) => void;\n    onCompleteSubBatch: () => void;\n    flippedCoins: string[];\n    flippingCoins: { [key: string]: { isFlipping: boolean } };\n}\n\nconst SubBatchDisplay: React.FC<SubBatchDisplayProps> = ({\n    batchNumber,\n    subBatchNumber,\n    tasks,\n    isActive,\n    canExecute,\n    onFlipCoin,\n    onCompleteSubBatch,\n    flippedCoins,\n    flippingCoins\n}) => {\n    const completedTasks = tasks.filter(t => t.status === TaskStatus.COMPLETED);\n    const allTasksCompleted = tasks.length > 0 && completedTasks.length === tasks.length;\n\n    return (\n        <Paper \n            elevation={3} \n            sx={{ \n                p: 2, \n                mb: 2, \n                opacity: isActive ? 1 : 0.5,\n                pointerEvents: isActive ? 'auto' : 'none'\n            }}\n        >\n            <Box sx={{ mb: 2 }}>\n                <Typography variant=\"h6\" component=\"div\">\n                    Sub-batch {subBatchNumber + 1}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    Progress: {completedTasks.length}/{tasks.length} coins flipped\n                </Typography>\n            </Box>\n\n            <Grid container spacing={1} sx={{ mb: 2 }}>\n                {tasks.map((task) => (\n                    <Grid item key={task.id}>\n                        <Box\n                            sx={{\n                                width: 60,\n                                height: 60,\n                                borderRadius: '50%',\n                                backgroundColor: task.type === TaskType.HEADS ? '#FFD700' : '#C0C0C0',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                cursor: canExecute ? 'pointer' : 'default',\n                                transition: 'transform 0.3s',\n                                transform: flippingCoins[task.id]?.isFlipping \n                                    ? 'rotateY(180deg)' \n                                    : flippedCoins.includes(task.id)\n                                    ? 'rotateY(180deg)'\n                                    : 'rotateY(0deg)',\n                                '&:hover': {\n                                    transform: canExecute \n                                        ? flippedCoins.includes(task.id)\n                                            ? 'rotateY(180deg) scale(1.1)'\n                                            : 'rotateY(0deg) scale(1.1)'\n                                        : undefined\n                                }\n                            }}\n                            onClick={() => canExecute && onFlipCoin(task.id)}\n                        >\n                            <Typography variant=\"body1\">\n                                {task.type === TaskType.HEADS ? 'H' : 'T'}\n                            </Typography>\n                        </Box>\n                    </Grid>\n                ))}\n            </Grid>\n\n            {allTasksCompleted && canExecute && (\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={onCompleteSubBatch}\n                    fullWidth\n                >\n                    Complete Sub-batch {subBatchNumber + 1}\n                </Button>\n            )}\n        </Paper>\n    );\n};\n\nexport default SubBatchDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}