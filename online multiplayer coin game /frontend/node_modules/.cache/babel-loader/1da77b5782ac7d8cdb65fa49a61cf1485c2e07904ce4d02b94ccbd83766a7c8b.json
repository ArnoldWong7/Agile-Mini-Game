{"ast":null,"code":"var _jsxFileName = \"/Users/huanghao/Desktop/online multiplayer task game/frontend/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Card, CardContent, Typography, Grid, TextField, Tabs, Tab, Alert, Chip, keyframes } from '@mui/material';\nimport { TaskStatus, PlayerStatus, TaskType } from '../types';\nimport { gameService, WebSocketService } from '../services/gameService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Game = ({\n  gameId: initialGameId\n}) => {\n  _s();\n  var _game$players$;\n  const [gameId, setGameId] = useState(initialGameId);\n  const [game, setGame] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [playerId, setPlayerId] = useState(null);\n  const [wsService, setWsService] = useState(null);\n  const [showJoinDialog, setShowJoinDialog] = useState(!initialGameId);\n  const [playerCount, setPlayerCount] = useState(2);\n  const [maxBatches, setMaxBatches] = useState(3);\n  const [tasksPerBatch, setTasksPerBatch] = useState(2);\n  const [joinGameId, setJoinGameId] = useState('');\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  useEffect(() => {\n    if (gameId && playerId) {\n      const service = new WebSocketService(gameId, playerId, updatedGame => {\n        console.log('Game state updated:', updatedGame);\n        setGame(updatedGame);\n      });\n      service.connect();\n      setWsService(service);\n\n      // Cleanup function\n      return () => {\n        service.disconnect();\n      };\n    }\n  }, [gameId, playerId]);\n  const handleCreateGame = async () => {\n    if (!playerName) {\n      setError('Please enter your name first');\n      return;\n    }\n    try {\n      const newGameId = await gameService.createGame(playerCount, maxBatches, tasksPerBatch);\n      setGameId(newGameId);\n\n      // Automatically join the game as the creator\n      const newPlayerId = await gameService.joinGame(newGameId, playerName);\n      setPlayerId(newPlayerId);\n\n      // Get initial game state\n      const gameState = await gameService.getGameState(newGameId);\n      setGame(gameState);\n      setError(null);\n    } catch (error) {\n      setError('Failed to create game. Please try again.');\n      console.error('Error creating game:', error);\n    }\n  };\n  const handleJoinGame = async () => {\n    if (!playerName) {\n      setError('Please enter player name');\n      return;\n    }\n    const targetGameId = gameId || joinGameId;\n    if (!targetGameId) {\n      setError('Please enter game ID');\n      return;\n    }\n    try {\n      const exists = await gameService.checkGameExists(targetGameId);\n      if (!exists) {\n        setError('Game not found');\n        return;\n      }\n      const newPlayerId = await gameService.joinGame(targetGameId, playerName);\n      setPlayerId(newPlayerId);\n      setGameId(targetGameId);\n      setShowJoinDialog(false);\n      const gameState = await gameService.getGameState(targetGameId);\n      setGame(gameState);\n      setError(null);\n    } catch (error) {\n      setError('Failed to join game. Please try again.');\n      console.error('Error joining game:', error);\n    }\n  };\n  const handleStartGame = async () => {\n    if (!gameId) return;\n    try {\n      await gameService.startGame(gameId);\n      setError(null);\n    } catch (error) {\n      setError('Failed to start game. Please try again.');\n      console.error('Error starting game:', error);\n    }\n  };\n  const flipAnimation = keyframes`\n        0% {\n            transform: rotateY(0deg);\n        }\n        100% {\n            transform: rotateY(1800deg);\n        }\n    `;\n  const renderCoin = (type, isFlipping) => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 80,\n      height: 80,\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: type === TaskType.HEADS ? '#FFD700' : '#DAA520',\n      border: '4px solid #B8860B',\n      color: '#704214',\n      fontWeight: 'bold',\n      fontSize: '1.2rem',\n      animation: isFlipping ? `${flipAnimation} 1s ease-in-out` : 'none',\n      perspective: 1000,\n      mb: 2\n    },\n    children: type === TaskType.HEADS ? 'H' : 'T'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n  const [flippingCoins, setFlippingCoins] = useState({});\n  const handleCompleteTask = taskId => {\n    if (wsService) {\n      setFlippingCoins(prev => ({\n        ...prev,\n        [taskId]: true\n      }));\n      setTimeout(() => {\n        wsService.completeTask(taskId);\n        setFlippingCoins(prev => ({\n          ...prev,\n          [taskId]: false\n        }));\n      }, 1000);\n    }\n  };\n  const getPlayerStatusColor = status => {\n    switch (status) {\n      case PlayerStatus.ACTIVE:\n        return 'success';\n      case PlayerStatus.WAITING:\n        return 'warning';\n      case PlayerStatus.IDLE:\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n  const getTaskStatusColor = status => {\n    switch (status) {\n      case TaskStatus.COMPLETED:\n        return '#4caf50';\n      case TaskStatus.IN_PROGRESS:\n        return '#ff9800';\n      case TaskStatus.PENDING:\n        return '#9e9e9e';\n      default:\n        return '#9e9e9e';\n    }\n  };\n  const renderTask = (task, playerName) => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2,\n      backgroundColor: 'background.paper',\n      position: 'relative',\n      overflow: 'visible'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        pb: '16px !important',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [renderCoin(task.type, flippingCoins[task.id] || false), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: 'primary.main'\n          },\n          children: task.type === TaskType.HEADS ? 'Flip to Heads' : 'Flip to Tails'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: task.status,\n          size: \"small\",\n          sx: {\n            backgroundColor: getTaskStatusColor(task.status),\n            color: 'white',\n            fontWeight: 500\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: [\"Batch: \", task.batch_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), task.status === TaskStatus.PENDING && task.assigned_to === playerId && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleCompleteTask(task.id),\n          size: \"small\",\n          disabled: flippingCoins[task.id],\n          children: \"Flip Coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)\n  }, `${task.id}-${playerName}-${task.batch_number}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n  const renderPlayer = player => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: 'primary.main'\n            },\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: player.status,\n            size: \"small\",\n            color: getPlayerStatusColor(player.status),\n            sx: {\n              fontWeight: 500\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Batch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [player.current_batch, \" / \", game === null || game === void 0 ? void 0 : game.max_batches]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: player.current_tasks.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: player.completed_tasks.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              color: 'primary.main',\n              fontWeight: 500,\n              mb: 2\n            },\n            children: \"Current Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), player.current_tasks.map(task => renderTask(task, player.name))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), player.completed_tasks.length > 0 && game && player.order === game.players.length - 1 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              color: 'primary.main',\n              fontWeight: 500,\n              mb: 2\n            },\n            children: \"Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this), player.completed_tasks.map(task => renderTask(task, player.name))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)\n  }, `player-${player.id}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n  if (!gameId || !playerId) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: (_, newValue) => setActiveTab(newValue),\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Create Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this), activeTab === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Players\",\n            type: \"number\",\n            value: playerCount,\n            onChange: e => setPlayerCount(Number(e.target.value)),\n            inputProps: {\n              min: 2,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Batches\",\n            type: \"number\",\n            value: maxBatches,\n            onChange: e => setMaxBatches(Number(e.target.value)),\n            inputProps: {\n              min: 1,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Tasks per Batch\",\n            type: \"number\",\n            value: tasksPerBatch,\n            onChange: e => setTasksPerBatch(Number(e.target.value)),\n            inputProps: {\n              min: 1,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleCreateGame,\n            disabled: !playerName,\n            children: \"Create Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Game ID\",\n            value: joinGameId,\n            onChange: e => setJoinGameId(e.target.value.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Player Name\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleJoinGame,\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      backgroundColor: 'background.default',\n      minHeight: '100vh'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }, this), game && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 1,\n          color: 'primary.main'\n        },\n        children: [\"Game ID: \", game.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3,\n          color: 'text.primary'\n        },\n        children: [\"Game Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }, this), game.status === 'waiting' && playerId === ((_game$players$ = game.players[0]) === null || _game$players$ === void 0 ? void 0 : _game$players$.id) && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleStartGame,\n        sx: {\n          mb: 3\n        },\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: game.players.map(renderPlayer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"cTGVTJtFAMVl1HtcCpGd0rzo5sU=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","Typography","Grid","TextField","Tabs","Tab","Alert","Chip","keyframes","TaskStatus","PlayerStatus","TaskType","gameService","WebSocketService","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","gameId","initialGameId","_s","_game$players$","setGameId","game","setGame","playerName","setPlayerName","playerId","setPlayerId","wsService","setWsService","showJoinDialog","setShowJoinDialog","playerCount","setPlayerCount","maxBatches","setMaxBatches","tasksPerBatch","setTasksPerBatch","joinGameId","setJoinGameId","error","setError","activeTab","setActiveTab","service","updatedGame","console","log","connect","disconnect","handleCreateGame","newGameId","createGame","newPlayerId","joinGame","gameState","getGameState","handleJoinGame","targetGameId","exists","checkGameExists","handleStartGame","startGame","flipAnimation","renderCoin","type","isFlipping","sx","width","height","borderRadius","display","alignItems","justifyContent","backgroundColor","HEADS","border","color","fontWeight","fontSize","animation","perspective","mb","children","fileName","_jsxFileName","lineNumber","columnNumber","flippingCoins","setFlippingCoins","handleCompleteTask","taskId","prev","setTimeout","completeTask","getPlayerStatusColor","status","ACTIVE","WAITING","IDLE","getTaskStatusColor","COMPLETED","IN_PROGRESS","PENDING","renderTask","task","position","overflow","pb","flexDirection","id","variant","label","size","batch_number","assigned_to","onClick","disabled","renderPlayer","player","item","xs","md","name","container","spacing","current_batch","max_batches","current_tasks","length","completed_tasks","mt","map","order","players","p","minHeight","value","onChange","_","newValue","severity","fullWidth","e","target","required","Number","inputProps","min","max","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/huanghao/Desktop/online multiplayer task game/frontend/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    Grid,\n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\n    Alert,\n    Chip,\n    keyframes\n} from '@mui/material';\nimport { Game as GameType, Player, Task, TaskStatus, PlayerStatus, TaskType } from '../types';\nimport { gameService, WebSocketService } from '../services/gameService';\n\ninterface GameProps {\n    gameId?: string;\n}\n\nexport const Game: React.FC<GameProps> = ({ gameId: initialGameId }) => {\n    const [gameId, setGameId] = useState<string | undefined>(initialGameId);\n    const [game, setGame] = useState<GameType | null>(null);\n    const [playerName, setPlayerName] = useState('');\n    const [playerId, setPlayerId] = useState<string | null>(null);\n    const [wsService, setWsService] = useState<WebSocketService | null>(null);\n    const [showJoinDialog, setShowJoinDialog] = useState(!initialGameId);\n    const [playerCount, setPlayerCount] = useState(2);\n    const [maxBatches, setMaxBatches] = useState(3);\n    const [tasksPerBatch, setTasksPerBatch] = useState(2);\n    const [joinGameId, setJoinGameId] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [activeTab, setActiveTab] = useState(0);\n\n    useEffect(() => {\n        if (gameId && playerId) {\n            const service = new WebSocketService(gameId, playerId, (updatedGame) => {\n                console.log('Game state updated:', updatedGame);\n                setGame(updatedGame);\n            });\n            service.connect();\n            setWsService(service);\n\n            // Cleanup function\n            return () => {\n                service.disconnect();\n            };\n        }\n    }, [gameId, playerId]);\n\n    const handleCreateGame = async () => {\n        if (!playerName) {\n            setError('Please enter your name first');\n            return;\n        }\n\n        try {\n            const newGameId = await gameService.createGame(playerCount, maxBatches, tasksPerBatch);\n            setGameId(newGameId);\n            \n            // Automatically join the game as the creator\n            const newPlayerId = await gameService.joinGame(newGameId, playerName);\n            setPlayerId(newPlayerId);\n            \n            // Get initial game state\n            const gameState = await gameService.getGameState(newGameId);\n            setGame(gameState);\n            \n            setError(null);\n        } catch (error) {\n            setError('Failed to create game. Please try again.');\n            console.error('Error creating game:', error);\n        }\n    };\n\n    const handleJoinGame = async () => {\n        if (!playerName) {\n            setError('Please enter player name');\n            return;\n        }\n\n        const targetGameId = gameId || joinGameId;\n        if (!targetGameId) {\n            setError('Please enter game ID');\n            return;\n        }\n\n        try {\n            const exists = await gameService.checkGameExists(targetGameId);\n            if (!exists) {\n                setError('Game not found');\n                return;\n            }\n\n            const newPlayerId = await gameService.joinGame(targetGameId, playerName);\n            setPlayerId(newPlayerId);\n            setGameId(targetGameId);\n            setShowJoinDialog(false);\n            const gameState = await gameService.getGameState(targetGameId);\n            setGame(gameState);\n            setError(null);\n        } catch (error) {\n            setError('Failed to join game. Please try again.');\n            console.error('Error joining game:', error);\n        }\n    };\n\n    const handleStartGame = async () => {\n        if (!gameId) return;\n\n        try {\n            await gameService.startGame(gameId);\n            setError(null);\n        } catch (error) {\n            setError('Failed to start game. Please try again.');\n            console.error('Error starting game:', error);\n        }\n    };\n\n    const flipAnimation = keyframes`\n        0% {\n            transform: rotateY(0deg);\n        }\n        100% {\n            transform: rotateY(1800deg);\n        }\n    `;\n\n    const renderCoin = (type: TaskType, isFlipping: boolean) => (\n        <Box\n            sx={{\n                width: 80,\n                height: 80,\n                borderRadius: '50%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: type === TaskType.HEADS ? '#FFD700' : '#DAA520',\n                border: '4px solid #B8860B',\n                color: '#704214',\n                fontWeight: 'bold',\n                fontSize: '1.2rem',\n                animation: isFlipping ? `${flipAnimation} 1s ease-in-out` : 'none',\n                perspective: 1000,\n                mb: 2\n            }}\n        >\n            {type === TaskType.HEADS ? 'H' : 'T'}\n        </Box>\n    );\n\n    const [flippingCoins, setFlippingCoins] = useState<{[key: string]: boolean}>({});\n\n    const handleCompleteTask = (taskId: string) => {\n        if (wsService) {\n            setFlippingCoins(prev => ({ ...prev, [taskId]: true }));\n            setTimeout(() => {\n                wsService.completeTask(taskId);\n                setFlippingCoins(prev => ({ ...prev, [taskId]: false }));\n            }, 1000);\n        }\n    };\n\n    const getPlayerStatusColor = (status: PlayerStatus) => {\n        switch (status) {\n            case PlayerStatus.ACTIVE:\n                return 'success';\n            case PlayerStatus.WAITING:\n                return 'warning';\n            case PlayerStatus.IDLE:\n                return 'default';\n            default:\n                return 'default';\n        }\n    };\n\n    const getTaskStatusColor = (status: TaskStatus) => {\n        switch (status) {\n            case TaskStatus.COMPLETED:\n                return '#4caf50';\n            case TaskStatus.IN_PROGRESS:\n                return '#ff9800';\n            case TaskStatus.PENDING:\n                return '#9e9e9e';\n            default:\n                return '#9e9e9e';\n        }\n    };\n\n    const renderTask = (task: Task, playerName: string) => (\n        <Card \n            key={`${task.id}-${playerName}-${task.batch_number}`} \n            sx={{ \n                mb: 2,\n                backgroundColor: 'background.paper',\n                position: 'relative',\n                overflow: 'visible'\n            }}\n        >\n            <CardContent sx={{ \n                pb: '16px !important',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            }}>\n                {renderCoin(task.type, flippingCoins[task.id] || false)}\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%', mb: 1 }}>\n                    <Typography variant=\"h6\" sx={{ color: 'primary.main' }}>\n                        {task.type === TaskType.HEADS ? 'Flip to Heads' : 'Flip to Tails'}\n                    </Typography>\n                    <Chip\n                        label={task.status}\n                        size=\"small\"\n                        sx={{\n                            backgroundColor: getTaskStatusColor(task.status),\n                            color: 'white',\n                            fontWeight: 500,\n                        }}\n                    />\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Batch: {task.batch_number}\n                    </Typography>\n                    {task.status === TaskStatus.PENDING && task.assigned_to === playerId && (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => handleCompleteTask(task.id)}\n                            size=\"small\"\n                            disabled={flippingCoins[task.id]}\n                        >\n                            Flip Coin\n                        </Button>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    const renderPlayer = (player: Player) => (\n        <Grid item xs={12} md={6} key={`player-${player.id}`}>\n            <Card sx={{ height: '100%' }}>\n                <CardContent>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                        <Typography variant=\"h6\" sx={{ color: 'primary.main' }}>{player.name}</Typography>\n                        <Chip\n                            label={player.status}\n                            size=\"small\"\n                            color={getPlayerStatusColor(player.status)}\n                            sx={{ fontWeight: 500 }}\n                        />\n                    </Box>\n                    <Grid container spacing={2} sx={{ mb: 3 }}>\n                        <Grid item xs={4}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">Batch</Typography>\n                            <Typography variant=\"h6\">{player.current_batch} / {game?.max_batches}</Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">Current</Typography>\n                            <Typography variant=\"h6\">{player.current_tasks.length}</Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">Completed</Typography>\n                            <Typography variant=\"h6\">{player.completed_tasks.length}</Typography>\n                        </Grid>\n                    </Grid>\n                    <Box sx={{ mt: 3 }}>\n                        <Typography variant=\"subtitle1\" sx={{ color: 'primary.main', fontWeight: 500, mb: 2 }}>\n                            Current Tasks\n                        </Typography>\n                        {player.current_tasks.map(task => renderTask(task, player.name))}\n                    </Box>\n                    {player.completed_tasks.length > 0 && game && player.order === game.players.length - 1 && (\n                        <Box sx={{ mt: 3 }}>\n                            <Typography variant=\"subtitle1\" sx={{ color: 'primary.main', fontWeight: 500, mb: 2 }}>\n                                Completed Tasks\n                            </Typography>\n                            {player.completed_tasks.map(task => renderTask(task, player.name))}\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n        </Grid>\n    );\n\n    if (!gameId || !playerId) {\n        return (\n            <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n                <Tabs value={activeTab} onChange={(_, newValue) => setActiveTab(newValue)} sx={{ mb: 3 }}>\n                    <Tab label=\"Create Game\" />\n                    <Tab label=\"Join Game\" />\n                </Tabs>\n\n                {error && (\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>\n                        {error}\n                    </Alert>\n                )}\n\n                {activeTab === 0 ? (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Your Name\"\n                                value={playerName}\n                                onChange={(e) => setPlayerName(e.target.value)}\n                                required\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Number of Players\"\n                                type=\"number\"\n                                value={playerCount}\n                                onChange={(e) => setPlayerCount(Number(e.target.value))}\n                                inputProps={{ min: 2, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Number of Batches\"\n                                type=\"number\"\n                                value={maxBatches}\n                                onChange={(e) => setMaxBatches(Number(e.target.value))}\n                                inputProps={{ min: 1, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Tasks per Batch\"\n                                type=\"number\"\n                                value={tasksPerBatch}\n                                onChange={(e) => setTasksPerBatch(Number(e.target.value))}\n                                inputProps={{ min: 1, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button \n                                variant=\"contained\" \n                                onClick={handleCreateGame}\n                                disabled={!playerName}\n                            >\n                                Create Game\n                            </Button>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Game ID\"\n                                value={joinGameId}\n                                onChange={(e) => setJoinGameId(e.target.value.toUpperCase())}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Player Name\"\n                                value={playerName}\n                                onChange={(e) => setPlayerName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button variant=\"contained\" onClick={handleJoinGame}>\n                                Join Game\n                            </Button>\n                        </Grid>\n                    </Grid>\n                )}\n            </Box>\n        );\n    }\n\n    return (\n        <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n            {error && (\n                <Alert severity=\"error\" sx={{ mb: 2 }}>\n                    {error}\n                </Alert>\n            )}\n\n            {game && (\n                <>\n                    <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n                        Game ID: {game.id}\n                    </Typography>\n                    <Typography variant=\"h5\" sx={{ mb: 3, color: 'text.primary' }}>\n                        Game Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n                    </Typography>\n\n                    {game.status === 'waiting' && playerId === game.players[0]?.id && (\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleStartGame}\n                            sx={{ mb: 3 }}\n                        >\n                            Start Game\n                        </Button>\n                    )}\n\n                    <Grid container spacing={3}>\n                        {game.players.map(renderPlayer)}\n                    </Grid>\n                </>\n            )}\n        </Box>\n    );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}