{"ast":null,"code":"var _jsxFileName = \"/Users/huanghao/Desktop/online multiplayer task game copy/frontend/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Card, CardContent, Typography, Grid, TextField, Tabs, Tab, Alert } from '@mui/material';\nimport { TaskStatus, PlayerStatus } from '../types';\nimport { gameService, WebSocketService } from '../services/gameService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Game = ({\n  gameId: initialGameId\n}) => {\n  _s();\n  var _game$players$;\n  const [gameId, setGameId] = useState(initialGameId);\n  const [game, setGame] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [playerId, setPlayerId] = useState(null);\n  const [wsService, setWsService] = useState(null);\n  const [showJoinDialog, setShowJoinDialog] = useState(!initialGameId);\n  const [playerCount, setPlayerCount] = useState(2);\n  const [maxBatches, setMaxBatches] = useState(3);\n  const [tasksPerBatch, setTasksPerBatch] = useState(2);\n  const [joinGameId, setJoinGameId] = useState('');\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  useEffect(() => {\n    if (gameId && playerId) {\n      const service = new WebSocketService(gameId, playerId, updatedGame => {\n        console.log('Game state updated:', updatedGame);\n        setGame(updatedGame);\n      });\n      service.connect();\n      setWsService(service);\n\n      // Cleanup function\n      return () => {\n        service.disconnect();\n      };\n    }\n  }, [gameId, playerId]);\n  const handleCreateGame = async () => {\n    if (!playerName) {\n      setError('Please enter your name first');\n      return;\n    }\n    try {\n      const newGameId = await gameService.createGame(playerCount, maxBatches, tasksPerBatch);\n      setGameId(newGameId);\n\n      // Automatically join the game as the creator\n      const newPlayerId = await gameService.joinGame(newGameId, playerName);\n      setPlayerId(newPlayerId);\n\n      // Get initial game state\n      const gameState = await gameService.getGameState(newGameId);\n      setGame(gameState);\n      setError(null);\n    } catch (error) {\n      setError('Failed to create game. Please try again.');\n      console.error('Error creating game:', error);\n    }\n  };\n  const handleJoinGame = async () => {\n    if (!playerName) {\n      setError('Please enter player name');\n      return;\n    }\n    const targetGameId = gameId || joinGameId;\n    if (!targetGameId) {\n      setError('Please enter game ID');\n      return;\n    }\n    try {\n      const exists = await gameService.checkGameExists(targetGameId);\n      if (!exists) {\n        setError('Game not found');\n        return;\n      }\n      const newPlayerId = await gameService.joinGame(targetGameId, playerName);\n      setPlayerId(newPlayerId);\n      setGameId(targetGameId);\n      setShowJoinDialog(false);\n      const gameState = await gameService.getGameState(targetGameId);\n      setGame(gameState);\n      setError(null);\n    } catch (error) {\n      setError('Failed to join game. Please try again.');\n      console.error('Error joining game:', error);\n    }\n  };\n  const handleStartGame = async () => {\n    if (!gameId) return;\n    try {\n      await gameService.startGame(gameId);\n      setError(null);\n    } catch (error) {\n      setError('Failed to start game. Please try again.');\n      console.error('Error starting game:', error);\n    }\n  };\n  const handleCompleteTask = taskId => {\n    if (wsService) {\n      wsService.completeTask(taskId);\n    }\n  };\n  const getPlayerStatusColor = status => {\n    switch (status) {\n      case PlayerStatus.ACTIVE:\n        return 'success';\n      case PlayerStatus.WAITING:\n        return 'warning';\n      case PlayerStatus.IDLE:\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n  const renderTask = (task, playerName) => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: task.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        children: [\"Batch: \", task.batch_number, \" | Status: \", task.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), task.status === TaskStatus.PENDING && task.assigned_to === playerId && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => handleCompleteTask(task.id),\n        sx: {\n          mt: 1\n        },\n        children: \"Complete Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)\n  }, `${task.id}-${playerName}-${task.batch_number}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n  const renderPlayer = player => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: [\"Current Batch: \", player.current_batch, \" / \", game === null || game === void 0 ? void 0 : game.max_batches]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: [\"Current Tasks: \", player.current_tasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: [\"Completed Tasks: \", player.completed_tasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"primary\",\n            children: \"Current Tasks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), player.current_tasks.map(task => renderTask(task, player.name))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), player.completed_tasks.length > 0 && game && player.order === game.players.length - 1 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"primary\",\n            children: \"Completed Tasks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), player.completed_tasks.map(task => renderTask(task, player.name))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, `player-${player.id}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n  if (!gameId || !playerId) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: (_, newValue) => setActiveTab(newValue),\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Create Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), activeTab === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Players\",\n            type: \"number\",\n            value: playerCount,\n            onChange: e => setPlayerCount(Number(e.target.value)),\n            inputProps: {\n              min: 2,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Batches\",\n            type: \"number\",\n            value: maxBatches,\n            onChange: e => setMaxBatches(Number(e.target.value)),\n            inputProps: {\n              min: 1,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Tasks per Batch\",\n            type: \"number\",\n            value: tasksPerBatch,\n            onChange: e => setTasksPerBatch(Number(e.target.value)),\n            inputProps: {\n              min: 1,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleCreateGame,\n            disabled: !playerName,\n            children: \"Create Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Game ID\",\n            value: joinGameId,\n            onChange: e => setJoinGameId(e.target.value.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Player Name\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleJoinGame,\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }, this), game && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 1\n        },\n        children: [\"Game ID: \", game.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3\n        },\n        children: [\"Game Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this), game.status === 'waiting' && playerId === ((_game$players$ = game.players[0]) === null || _game$players$ === void 0 ? void 0 : _game$players$.id) && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleStartGame,\n        sx: {\n          mb: 3\n        },\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: game.players.map(renderPlayer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"4hCgmjJcqCXcExsHko7C4ZylyDg=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","Typography","Grid","TextField","Tabs","Tab","Alert","TaskStatus","PlayerStatus","gameService","WebSocketService","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","gameId","initialGameId","_s","_game$players$","setGameId","game","setGame","playerName","setPlayerName","playerId","setPlayerId","wsService","setWsService","showJoinDialog","setShowJoinDialog","playerCount","setPlayerCount","maxBatches","setMaxBatches","tasksPerBatch","setTasksPerBatch","joinGameId","setJoinGameId","error","setError","activeTab","setActiveTab","service","updatedGame","console","log","connect","disconnect","handleCreateGame","newGameId","createGame","newPlayerId","joinGame","gameState","getGameState","handleJoinGame","targetGameId","exists","checkGameExists","handleStartGame","startGame","handleCompleteTask","taskId","completeTask","getPlayerStatusColor","status","ACTIVE","WAITING","IDLE","renderTask","task","sx","mb","children","variant","type","fileName","_jsxFileName","lineNumber","columnNumber","description","color","batch_number","PENDING","assigned_to","onClick","id","mt","renderPlayer","player","item","xs","md","name","current_batch","max_batches","current_tasks","length","completed_tasks","map","order","players","p","value","onChange","_","newValue","label","severity","container","spacing","fullWidth","e","target","required","Number","inputProps","min","max","disabled","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/huanghao/Desktop/online multiplayer task game copy/frontend/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    Grid,\n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\n    Alert,\n    Chip\n} from '@mui/material';\nimport { Game as GameType, Player, Task, TaskStatus, PlayerStatus } from '../types';\nimport { gameService, WebSocketService } from '../services/gameService';\n\ninterface GameProps {\n    gameId?: string;\n}\n\nexport const Game: React.FC<GameProps> = ({ gameId: initialGameId }) => {\n    const [gameId, setGameId] = useState<string | undefined>(initialGameId);\n    const [game, setGame] = useState<GameType | null>(null);\n    const [playerName, setPlayerName] = useState('');\n    const [playerId, setPlayerId] = useState<string | null>(null);\n    const [wsService, setWsService] = useState<WebSocketService | null>(null);\n    const [showJoinDialog, setShowJoinDialog] = useState(!initialGameId);\n    const [playerCount, setPlayerCount] = useState(2);\n    const [maxBatches, setMaxBatches] = useState(3);\n    const [tasksPerBatch, setTasksPerBatch] = useState(2);\n    const [joinGameId, setJoinGameId] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [activeTab, setActiveTab] = useState(0);\n\n    useEffect(() => {\n        if (gameId && playerId) {\n            const service = new WebSocketService(gameId, playerId, (updatedGame) => {\n                console.log('Game state updated:', updatedGame);\n                setGame(updatedGame);\n            });\n            service.connect();\n            setWsService(service);\n\n            // Cleanup function\n            return () => {\n                service.disconnect();\n            };\n        }\n    }, [gameId, playerId]);\n\n    const handleCreateGame = async () => {\n        if (!playerName) {\n            setError('Please enter your name first');\n            return;\n        }\n\n        try {\n            const newGameId = await gameService.createGame(playerCount, maxBatches, tasksPerBatch);\n            setGameId(newGameId);\n            \n            // Automatically join the game as the creator\n            const newPlayerId = await gameService.joinGame(newGameId, playerName);\n            setPlayerId(newPlayerId);\n            \n            // Get initial game state\n            const gameState = await gameService.getGameState(newGameId);\n            setGame(gameState);\n            \n            setError(null);\n        } catch (error) {\n            setError('Failed to create game. Please try again.');\n            console.error('Error creating game:', error);\n        }\n    };\n\n    const handleJoinGame = async () => {\n        if (!playerName) {\n            setError('Please enter player name');\n            return;\n        }\n\n        const targetGameId = gameId || joinGameId;\n        if (!targetGameId) {\n            setError('Please enter game ID');\n            return;\n        }\n\n        try {\n            const exists = await gameService.checkGameExists(targetGameId);\n            if (!exists) {\n                setError('Game not found');\n                return;\n            }\n\n            const newPlayerId = await gameService.joinGame(targetGameId, playerName);\n            setPlayerId(newPlayerId);\n            setGameId(targetGameId);\n            setShowJoinDialog(false);\n            const gameState = await gameService.getGameState(targetGameId);\n            setGame(gameState);\n            setError(null);\n        } catch (error) {\n            setError('Failed to join game. Please try again.');\n            console.error('Error joining game:', error);\n        }\n    };\n\n    const handleStartGame = async () => {\n        if (!gameId) return;\n\n        try {\n            await gameService.startGame(gameId);\n            setError(null);\n        } catch (error) {\n            setError('Failed to start game. Please try again.');\n            console.error('Error starting game:', error);\n        }\n    };\n\n    const handleCompleteTask = (taskId: string) => {\n        if (wsService) {\n            wsService.completeTask(taskId);\n        }\n    };\n\n    const getPlayerStatusColor = (status: PlayerStatus) => {\n        switch (status) {\n            case PlayerStatus.ACTIVE:\n                return 'success';\n            case PlayerStatus.WAITING:\n                return 'warning';\n            case PlayerStatus.IDLE:\n                return 'default';\n            default:\n                return 'default';\n        }\n    };\n\n    const renderTask = (task: Task, playerName: string) => (\n        <Card key={`${task.id}-${playerName}-${task.batch_number}`} sx={{ mb: 2 }}>\n            <CardContent>\n                <Typography variant=\"h6\">{task.type}</Typography>\n                <Typography>{task.description}</Typography>\n                <Typography color=\"textSecondary\">\n                    Batch: {task.batch_number} | Status: {task.status}\n                </Typography>\n                {task.status === TaskStatus.PENDING && task.assigned_to === playerId && (\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => handleCompleteTask(task.id)}\n                        sx={{ mt: 1 }}\n                    >\n                        Complete Task\n                    </Button>\n                )}\n            </CardContent>\n        </Card>\n    );\n\n    const renderPlayer = (player: Player) => (\n        <Grid item xs={12} md={6} key={`player-${player.id}`}>\n            <Card>\n                <CardContent>\n                    <Typography variant=\"h6\">{player.name}</Typography>\n                    <Typography color=\"textSecondary\">\n                        Current Batch: {player.current_batch} / {game?.max_batches}\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                        Current Tasks: {player.current_tasks.length}\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                        Completed Tasks: {player.completed_tasks.length}\n                    </Typography>\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"subtitle1\" color=\"primary\">Current Tasks:</Typography>\n                        {player.current_tasks.map(task => renderTask(task, player.name))}\n                    </Box>\n                    {player.completed_tasks.length > 0 && game && player.order === game.players.length - 1 && (\n                        <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"subtitle1\" color=\"primary\">Completed Tasks:</Typography>\n                            {player.completed_tasks.map(task => renderTask(task, player.name))}\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n        </Grid>\n    );\n\n    if (!gameId || !playerId) {\n        return (\n            <Box sx={{ p: 3 }}>\n                <Tabs value={activeTab} onChange={(_, newValue) => setActiveTab(newValue)} sx={{ mb: 3 }}>\n                    <Tab label=\"Create Game\" />\n                    <Tab label=\"Join Game\" />\n                </Tabs>\n\n                {error && (\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>\n                        {error}\n                    </Alert>\n                )}\n\n                {activeTab === 0 ? (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Your Name\"\n                                value={playerName}\n                                onChange={(e) => setPlayerName(e.target.value)}\n                                required\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Number of Players\"\n                                type=\"number\"\n                                value={playerCount}\n                                onChange={(e) => setPlayerCount(Number(e.target.value))}\n                                inputProps={{ min: 2, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Number of Batches\"\n                                type=\"number\"\n                                value={maxBatches}\n                                onChange={(e) => setMaxBatches(Number(e.target.value))}\n                                inputProps={{ min: 1, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Tasks per Batch\"\n                                type=\"number\"\n                                value={tasksPerBatch}\n                                onChange={(e) => setTasksPerBatch(Number(e.target.value))}\n                                inputProps={{ min: 1, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button \n                                variant=\"contained\" \n                                onClick={handleCreateGame}\n                                disabled={!playerName}\n                            >\n                                Create Game\n                            </Button>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Game ID\"\n                                value={joinGameId}\n                                onChange={(e) => setJoinGameId(e.target.value.toUpperCase())}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Player Name\"\n                                value={playerName}\n                                onChange={(e) => setPlayerName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button variant=\"contained\" onClick={handleJoinGame}>\n                                Join Game\n                            </Button>\n                        </Grid>\n                    </Grid>\n                )}\n            </Box>\n        );\n    }\n\n    return (\n        <Box sx={{ p: 3 }}>\n            {error && (\n                <Alert severity=\"error\" sx={{ mb: 2 }}>\n                    {error}\n                </Alert>\n            )}\n\n            {game && (\n                <>\n                    <Typography variant=\"h4\" sx={{ mb: 1 }}>\n                        Game ID: {game.id}\n                    </Typography>\n                    <Typography variant=\"h5\" sx={{ mb: 3 }}>\n                        Game Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n                    </Typography>\n\n                    {game.status === 'waiting' && playerId === game.players[0]?.id && (\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleStartGame}\n                            sx={{ mb: 3 }}\n                        >\n                            Start Game\n                        </Button>\n                    )}\n\n                    <Grid container spacing={3}>\n                        {game.players.map(renderPlayer)}\n                    </Grid>\n                </>\n            )}\n        </Box>\n    );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}