{"ast":null,"code":"var _jsxFileName = \"/Users/huanghao/Desktop/online multiplayer task game/frontend/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Card, CardContent, Typography, Grid, TextField, Tabs, Tab, Alert, Chip } from '@mui/material';\nimport { TaskStatus, PlayerStatus } from '../types';\nimport { gameService, WebSocketService } from '../services/gameService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Game = ({\n  gameId: initialGameId\n}) => {\n  _s();\n  var _game$players$;\n  const [gameId, setGameId] = useState(initialGameId);\n  const [game, setGame] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [playerId, setPlayerId] = useState(null);\n  const [wsService, setWsService] = useState(null);\n  const [showJoinDialog, setShowJoinDialog] = useState(!initialGameId);\n  const [playerCount, setPlayerCount] = useState(2);\n  const [maxBatches, setMaxBatches] = useState(3);\n  const [tasksPerBatch, setTasksPerBatch] = useState(2);\n  const [joinGameId, setJoinGameId] = useState('');\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  useEffect(() => {\n    if (gameId && playerId) {\n      const service = new WebSocketService(gameId, playerId, updatedGame => {\n        console.log('Game state updated:', updatedGame);\n        setGame(updatedGame);\n      });\n      service.connect();\n      setWsService(service);\n\n      // Cleanup function\n      return () => {\n        service.disconnect();\n      };\n    }\n  }, [gameId, playerId]);\n  const handleCreateGame = async () => {\n    if (!playerName) {\n      setError('Please enter your name first');\n      return;\n    }\n    try {\n      const newGameId = await gameService.createGame(playerCount, maxBatches, tasksPerBatch);\n      setGameId(newGameId);\n\n      // Automatically join the game as the creator\n      const newPlayerId = await gameService.joinGame(newGameId, playerName);\n      setPlayerId(newPlayerId);\n\n      // Get initial game state\n      const gameState = await gameService.getGameState(newGameId);\n      setGame(gameState);\n      setError(null);\n    } catch (error) {\n      setError('Failed to create game. Please try again.');\n      console.error('Error creating game:', error);\n    }\n  };\n  const handleJoinGame = async () => {\n    if (!playerName) {\n      setError('Please enter player name');\n      return;\n    }\n    const targetGameId = gameId || joinGameId;\n    if (!targetGameId) {\n      setError('Please enter game ID');\n      return;\n    }\n    try {\n      const exists = await gameService.checkGameExists(targetGameId);\n      if (!exists) {\n        setError('Game not found');\n        return;\n      }\n      const newPlayerId = await gameService.joinGame(targetGameId, playerName);\n      setPlayerId(newPlayerId);\n      setGameId(targetGameId);\n      setShowJoinDialog(false);\n      const gameState = await gameService.getGameState(targetGameId);\n      setGame(gameState);\n      setError(null);\n    } catch (error) {\n      setError('Failed to join game. Please try again.');\n      console.error('Error joining game:', error);\n    }\n  };\n  const handleStartGame = async () => {\n    if (!gameId) return;\n    try {\n      await gameService.startGame(gameId);\n      setError(null);\n    } catch (error) {\n      setError('Failed to start game. Please try again.');\n      console.error('Error starting game:', error);\n    }\n  };\n  const handleCompleteTask = taskId => {\n    if (wsService) {\n      wsService.completeTask(taskId);\n    }\n  };\n  const getPlayerStatusColor = status => {\n    switch (status) {\n      case PlayerStatus.ACTIVE:\n        return 'success';\n      case PlayerStatus.WAITING:\n        return 'warning';\n      case PlayerStatus.IDLE:\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n  const getTaskStatusColor = status => {\n    switch (status) {\n      case TaskStatus.COMPLETED:\n        return '#4caf50';\n      case TaskStatus.IN_PROGRESS:\n        return '#ff9800';\n      case TaskStatus.PENDING:\n        return '#9e9e9e';\n      default:\n        return '#9e9e9e';\n    }\n  };\n  const renderTask = (task, playerName) => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2,\n      backgroundColor: 'background.paper',\n      position: 'relative',\n      overflow: 'visible'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        pb: '16px !important'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'flex-start',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: 'primary.main'\n          },\n          children: task.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: task.status,\n          size: \"small\",\n          sx: {\n            backgroundColor: getTaskStatusColor(task.status),\n            color: 'white',\n            fontWeight: 500\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mb: 2\n        },\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: [\"Batch: \", task.batch_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), task.status === TaskStatus.PENDING && task.assigned_to === playerId && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleCompleteTask(task.id),\n          size: \"small\",\n          children: \"Complete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)\n  }, `${task.id}-${playerName}-${task.batch_number}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n  const renderPlayer = player => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: 'primary.main'\n            },\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: player.status,\n            size: \"small\",\n            color: getPlayerStatusColor(player.status),\n            sx: {\n              fontWeight: 500\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Batch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [player.current_batch, \" / \", game === null || game === void 0 ? void 0 : game.max_batches]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Current\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: player.current_tasks.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: player.completed_tasks.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              color: 'primary.main',\n              fontWeight: 500,\n              mb: 2\n            },\n            children: \"Current Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), player.current_tasks.map(task => renderTask(task, player.name))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), player.completed_tasks.length > 0 && game && player.order === game.players.length - 1 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              color: 'primary.main',\n              fontWeight: 500,\n              mb: 2\n            },\n            children: \"Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), player.completed_tasks.map(task => renderTask(task, player.name))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)\n  }, `player-${player.id}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n  if (!gameId || !playerId) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: (_, newValue) => setActiveTab(newValue),\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Create Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this), activeTab === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Players\",\n            type: \"number\",\n            value: playerCount,\n            onChange: e => setPlayerCount(Number(e.target.value)),\n            inputProps: {\n              min: 2,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Batches\",\n            type: \"number\",\n            value: maxBatches,\n            onChange: e => setMaxBatches(Number(e.target.value)),\n            inputProps: {\n              min: 1,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Tasks per Batch\",\n            type: \"number\",\n            value: tasksPerBatch,\n            onChange: e => setTasksPerBatch(Number(e.target.value)),\n            inputProps: {\n              min: 1,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleCreateGame,\n            disabled: !playerName,\n            children: \"Create Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Game ID\",\n            value: joinGameId,\n            onChange: e => setJoinGameId(e.target.value.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Player Name\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleJoinGame,\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      backgroundColor: 'background.default',\n      minHeight: '100vh'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }, this), game && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 1,\n          color: 'primary.main'\n        },\n        children: [\"Game ID: \", game.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3,\n          color: 'text.primary'\n        },\n        children: [\"Game Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }, this), game.status === 'waiting' && playerId === ((_game$players$ = game.players[0]) === null || _game$players$ === void 0 ? void 0 : _game$players$.id) && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleStartGame,\n        sx: {\n          mb: 3\n        },\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: game.players.map(renderPlayer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"4hCgmjJcqCXcExsHko7C4ZylyDg=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","Typography","Grid","TextField","Tabs","Tab","Alert","Chip","TaskStatus","PlayerStatus","gameService","WebSocketService","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","gameId","initialGameId","_s","_game$players$","setGameId","game","setGame","playerName","setPlayerName","playerId","setPlayerId","wsService","setWsService","showJoinDialog","setShowJoinDialog","playerCount","setPlayerCount","maxBatches","setMaxBatches","tasksPerBatch","setTasksPerBatch","joinGameId","setJoinGameId","error","setError","activeTab","setActiveTab","service","updatedGame","console","log","connect","disconnect","handleCreateGame","newGameId","createGame","newPlayerId","joinGame","gameState","getGameState","handleJoinGame","targetGameId","exists","checkGameExists","handleStartGame","startGame","handleCompleteTask","taskId","completeTask","getPlayerStatusColor","status","ACTIVE","WAITING","IDLE","getTaskStatusColor","COMPLETED","IN_PROGRESS","PENDING","renderTask","task","sx","mb","backgroundColor","position","overflow","children","pb","display","justifyContent","alignItems","variant","color","type","fileName","_jsxFileName","lineNumber","columnNumber","label","size","fontWeight","description","batch_number","assigned_to","onClick","id","renderPlayer","player","item","xs","md","height","name","container","spacing","current_batch","max_batches","current_tasks","length","completed_tasks","mt","map","order","players","p","minHeight","value","onChange","_","newValue","severity","fullWidth","e","target","required","Number","inputProps","min","max","disabled","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/huanghao/Desktop/online multiplayer task game/frontend/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    Grid,\n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\n    Alert,\n    Chip\n} from '@mui/material';\nimport { Game as GameType, Player, Task, TaskStatus, PlayerStatus } from '../types';\nimport { gameService, WebSocketService } from '../services/gameService';\n\ninterface GameProps {\n    gameId?: string;\n}\n\nexport const Game: React.FC<GameProps> = ({ gameId: initialGameId }) => {\n    const [gameId, setGameId] = useState<string | undefined>(initialGameId);\n    const [game, setGame] = useState<GameType | null>(null);\n    const [playerName, setPlayerName] = useState('');\n    const [playerId, setPlayerId] = useState<string | null>(null);\n    const [wsService, setWsService] = useState<WebSocketService | null>(null);\n    const [showJoinDialog, setShowJoinDialog] = useState(!initialGameId);\n    const [playerCount, setPlayerCount] = useState(2);\n    const [maxBatches, setMaxBatches] = useState(3);\n    const [tasksPerBatch, setTasksPerBatch] = useState(2);\n    const [joinGameId, setJoinGameId] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [activeTab, setActiveTab] = useState(0);\n\n    useEffect(() => {\n        if (gameId && playerId) {\n            const service = new WebSocketService(gameId, playerId, (updatedGame) => {\n                console.log('Game state updated:', updatedGame);\n                setGame(updatedGame);\n            });\n            service.connect();\n            setWsService(service);\n\n            // Cleanup function\n            return () => {\n                service.disconnect();\n            };\n        }\n    }, [gameId, playerId]);\n\n    const handleCreateGame = async () => {\n        if (!playerName) {\n            setError('Please enter your name first');\n            return;\n        }\n\n        try {\n            const newGameId = await gameService.createGame(playerCount, maxBatches, tasksPerBatch);\n            setGameId(newGameId);\n            \n            // Automatically join the game as the creator\n            const newPlayerId = await gameService.joinGame(newGameId, playerName);\n            setPlayerId(newPlayerId);\n            \n            // Get initial game state\n            const gameState = await gameService.getGameState(newGameId);\n            setGame(gameState);\n            \n            setError(null);\n        } catch (error) {\n            setError('Failed to create game. Please try again.');\n            console.error('Error creating game:', error);\n        }\n    };\n\n    const handleJoinGame = async () => {\n        if (!playerName) {\n            setError('Please enter player name');\n            return;\n        }\n\n        const targetGameId = gameId || joinGameId;\n        if (!targetGameId) {\n            setError('Please enter game ID');\n            return;\n        }\n\n        try {\n            const exists = await gameService.checkGameExists(targetGameId);\n            if (!exists) {\n                setError('Game not found');\n                return;\n            }\n\n            const newPlayerId = await gameService.joinGame(targetGameId, playerName);\n            setPlayerId(newPlayerId);\n            setGameId(targetGameId);\n            setShowJoinDialog(false);\n            const gameState = await gameService.getGameState(targetGameId);\n            setGame(gameState);\n            setError(null);\n        } catch (error) {\n            setError('Failed to join game. Please try again.');\n            console.error('Error joining game:', error);\n        }\n    };\n\n    const handleStartGame = async () => {\n        if (!gameId) return;\n\n        try {\n            await gameService.startGame(gameId);\n            setError(null);\n        } catch (error) {\n            setError('Failed to start game. Please try again.');\n            console.error('Error starting game:', error);\n        }\n    };\n\n    const handleCompleteTask = (taskId: string) => {\n        if (wsService) {\n            wsService.completeTask(taskId);\n        }\n    };\n\n    const getPlayerStatusColor = (status: PlayerStatus) => {\n        switch (status) {\n            case PlayerStatus.ACTIVE:\n                return 'success';\n            case PlayerStatus.WAITING:\n                return 'warning';\n            case PlayerStatus.IDLE:\n                return 'default';\n            default:\n                return 'default';\n        }\n    };\n\n    const getTaskStatusColor = (status: TaskStatus) => {\n        switch (status) {\n            case TaskStatus.COMPLETED:\n                return '#4caf50';\n            case TaskStatus.IN_PROGRESS:\n                return '#ff9800';\n            case TaskStatus.PENDING:\n                return '#9e9e9e';\n            default:\n                return '#9e9e9e';\n        }\n    };\n\n    const renderTask = (task: Task, playerName: string) => (\n        <Card \n            key={`${task.id}-${playerName}-${task.batch_number}`} \n            sx={{ \n                mb: 2,\n                backgroundColor: 'background.paper',\n                position: 'relative',\n                overflow: 'visible'\n            }}\n        >\n            <CardContent sx={{ pb: '16px !important' }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 1 }}>\n                    <Typography variant=\"h6\" sx={{ color: 'primary.main' }}>{task.type}</Typography>\n                    <Chip\n                        label={task.status}\n                        size=\"small\"\n                        sx={{\n                            backgroundColor: getTaskStatusColor(task.status),\n                            color: 'white',\n                            fontWeight: 500,\n                        }}\n                    />\n                </Box>\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>{task.description}</Typography>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Batch: {task.batch_number}\n                    </Typography>\n                    {task.status === TaskStatus.PENDING && task.assigned_to === playerId && (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => handleCompleteTask(task.id)}\n                            size=\"small\"\n                        >\n                            Complete Task\n                        </Button>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    const renderPlayer = (player: Player) => (\n        <Grid item xs={12} md={6} key={`player-${player.id}`}>\n            <Card sx={{ height: '100%' }}>\n                <CardContent>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                        <Typography variant=\"h6\" sx={{ color: 'primary.main' }}>{player.name}</Typography>\n                        <Chip\n                            label={player.status}\n                            size=\"small\"\n                            color={getPlayerStatusColor(player.status)}\n                            sx={{ fontWeight: 500 }}\n                        />\n                    </Box>\n                    <Grid container spacing={2} sx={{ mb: 3 }}>\n                        <Grid item xs={4}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">Batch</Typography>\n                            <Typography variant=\"h6\">{player.current_batch} / {game?.max_batches}</Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">Current</Typography>\n                            <Typography variant=\"h6\">{player.current_tasks.length}</Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">Completed</Typography>\n                            <Typography variant=\"h6\">{player.completed_tasks.length}</Typography>\n                        </Grid>\n                    </Grid>\n                    <Box sx={{ mt: 3 }}>\n                        <Typography variant=\"subtitle1\" sx={{ color: 'primary.main', fontWeight: 500, mb: 2 }}>\n                            Current Tasks\n                        </Typography>\n                        {player.current_tasks.map(task => renderTask(task, player.name))}\n                    </Box>\n                    {player.completed_tasks.length > 0 && game && player.order === game.players.length - 1 && (\n                        <Box sx={{ mt: 3 }}>\n                            <Typography variant=\"subtitle1\" sx={{ color: 'primary.main', fontWeight: 500, mb: 2 }}>\n                                Completed Tasks\n                            </Typography>\n                            {player.completed_tasks.map(task => renderTask(task, player.name))}\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n        </Grid>\n    );\n\n    if (!gameId || !playerId) {\n        return (\n            <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n                <Tabs value={activeTab} onChange={(_, newValue) => setActiveTab(newValue)} sx={{ mb: 3 }}>\n                    <Tab label=\"Create Game\" />\n                    <Tab label=\"Join Game\" />\n                </Tabs>\n\n                {error && (\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>\n                        {error}\n                    </Alert>\n                )}\n\n                {activeTab === 0 ? (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Your Name\"\n                                value={playerName}\n                                onChange={(e) => setPlayerName(e.target.value)}\n                                required\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Number of Players\"\n                                type=\"number\"\n                                value={playerCount}\n                                onChange={(e) => setPlayerCount(Number(e.target.value))}\n                                inputProps={{ min: 2, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Number of Batches\"\n                                type=\"number\"\n                                value={maxBatches}\n                                onChange={(e) => setMaxBatches(Number(e.target.value))}\n                                inputProps={{ min: 1, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Tasks per Batch\"\n                                type=\"number\"\n                                value={tasksPerBatch}\n                                onChange={(e) => setTasksPerBatch(Number(e.target.value))}\n                                inputProps={{ min: 1, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button \n                                variant=\"contained\" \n                                onClick={handleCreateGame}\n                                disabled={!playerName}\n                            >\n                                Create Game\n                            </Button>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Game ID\"\n                                value={joinGameId}\n                                onChange={(e) => setJoinGameId(e.target.value.toUpperCase())}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Player Name\"\n                                value={playerName}\n                                onChange={(e) => setPlayerName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button variant=\"contained\" onClick={handleJoinGame}>\n                                Join Game\n                            </Button>\n                        </Grid>\n                    </Grid>\n                )}\n            </Box>\n        );\n    }\n\n    return (\n        <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n            {error && (\n                <Alert severity=\"error\" sx={{ mb: 2 }}>\n                    {error}\n                </Alert>\n            )}\n\n            {game && (\n                <>\n                    <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n                        Game ID: {game.id}\n                    </Typography>\n                    <Typography variant=\"h5\" sx={{ mb: 3, color: 'text.primary' }}>\n                        Game Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n                    </Typography>\n\n                    {game.status === 'waiting' && playerId === game.players[0]?.id && (\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleStartGame}\n                            sx={{ mb: 3 }}\n                        >\n                            Start Game\n                        </Button>\n                    )}\n\n                    <Grid container spacing={3}>\n                        {game.players.map(renderPlayer)}\n                    </Grid>\n                </>\n            )}\n        </Box>\n    );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}