{"ast":null,"code":"var _jsxFileName = \"/Users/huanghao/Desktop/online multiplayer task game/frontend/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Card, CardContent, Typography, Grid, TextField, Tabs, Tab, Alert, Chip, keyframes } from '@mui/material';\nimport { TaskStatus, PlayerStatus, TaskType } from '../types';\nimport { gameService, WebSocketService } from '../services/gameService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Game = ({\n  gameId: initialGameId\n}) => {\n  _s();\n  var _game$players$;\n  const [gameId, setGameId] = useState(initialGameId);\n  const [game, setGame] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [playerId, setPlayerId] = useState(null);\n  const [wsService, setWsService] = useState(null);\n  const [showJoinDialog, setShowJoinDialog] = useState(!initialGameId);\n  const [playerCount, setPlayerCount] = useState(2);\n  const [maxBatches, setMaxBatches] = useState(3);\n  const [tasksPerBatch, setTasksPerBatch] = useState(2);\n  const [joinGameId, setJoinGameId] = useState('');\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  useEffect(() => {\n    if (gameId && playerId) {\n      const service = new WebSocketService(gameId, playerId, updatedGame => {\n        console.log('Game state updated:', updatedGame);\n        setGame(updatedGame);\n      });\n      service.connect();\n      setWsService(service);\n\n      // Cleanup function\n      return () => {\n        service.disconnect();\n      };\n    }\n  }, [gameId, playerId]);\n  const handleCreateGame = async () => {\n    if (!playerName) {\n      setError('Please enter your name first');\n      return;\n    }\n    try {\n      const newGameId = await gameService.createGame(playerCount, maxBatches, tasksPerBatch);\n      setGameId(newGameId);\n\n      // Automatically join the game as the creator\n      const newPlayerId = await gameService.joinGame(newGameId, playerName);\n      setPlayerId(newPlayerId);\n\n      // Get initial game state\n      const gameState = await gameService.getGameState(newGameId);\n      setGame(gameState);\n      setError(null);\n    } catch (error) {\n      setError('Failed to create game. Please try again.');\n      console.error('Error creating game:', error);\n    }\n  };\n  const handleJoinGame = async () => {\n    if (!playerName) {\n      setError('Please enter player name');\n      return;\n    }\n    const targetGameId = gameId || joinGameId;\n    if (!targetGameId) {\n      setError('Please enter game ID');\n      return;\n    }\n    try {\n      const exists = await gameService.checkGameExists(targetGameId);\n      if (!exists) {\n        setError('Game not found');\n        return;\n      }\n      const newPlayerId = await gameService.joinGame(targetGameId, playerName);\n      setPlayerId(newPlayerId);\n      setGameId(targetGameId);\n      setShowJoinDialog(false);\n      const gameState = await gameService.getGameState(targetGameId);\n      setGame(gameState);\n      setError(null);\n    } catch (error) {\n      setError('Failed to join game. Please try again.');\n      console.error('Error joining game:', error);\n    }\n  };\n  const handleStartGame = async () => {\n    if (!gameId) return;\n    try {\n      await gameService.startGame(gameId);\n      setError(null);\n    } catch (error) {\n      setError('Failed to start game. Please try again.');\n      console.error('Error starting game:', error);\n    }\n  };\n  const flipAnimation = keyframes`\n        0% {\n            transform: rotateY(0deg);\n        }\n        100% {\n            transform: rotateY(1800deg);\n        }\n    `;\n  const renderCoin = (type, isFlipping, isSmall = false) => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: isSmall ? 40 : 80,\n      height: isSmall ? 40 : 80,\n      borderRadius: '50%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: type === TaskType.HEADS ? '#FFD700' : '#DAA520',\n      border: `${isSmall ? 2 : 4}px solid #B8860B`,\n      color: '#704214',\n      fontWeight: 'bold',\n      fontSize: isSmall ? '0.9rem' : '1.2rem',\n      animation: isFlipping ? `${flipAnimation} 1s ease-in-out` : 'none',\n      perspective: 1000,\n      mb: isSmall ? 0 : 2,\n      position: 'relative',\n      '&::after': {\n        content: '\"\"',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        borderRadius: '50%',\n        background: 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 50%, rgba(0,0,0,0.1) 100%)',\n        pointerEvents: 'none'\n      }\n    },\n    children: type === TaskType.HEADS ? 'H' : 'T'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n  const [flippingCoins, setFlippingCoins] = useState({});\n  const handleCompleteTask = taskId => {\n    if (wsService) {\n      setFlippingCoins(prev => ({\n        ...prev,\n        [taskId]: true\n      }));\n      setTimeout(() => {\n        wsService.completeTask(taskId);\n        setFlippingCoins(prev => ({\n          ...prev,\n          [taskId]: false\n        }));\n      }, 1000);\n    }\n  };\n  const getPlayerStatusColor = status => {\n    switch (status) {\n      case PlayerStatus.ACTIVE:\n        return 'success';\n      case PlayerStatus.WAITING:\n        return 'warning';\n      case PlayerStatus.IDLE:\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n  const getTaskStatusColor = status => {\n    switch (status) {\n      case TaskStatus.COMPLETED:\n        return '#4caf50';\n      case TaskStatus.IN_PROGRESS:\n        return '#ff9800';\n      case TaskStatus.PENDING:\n        return '#9e9e9e';\n      default:\n        return '#9e9e9e';\n    }\n  };\n  const renderTask = (task, playerName) => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2,\n      backgroundColor: 'background.paper',\n      position: 'relative',\n      overflow: 'visible'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        pb: '16px !important',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [renderCoin(task.type, flippingCoins[task.id] || false), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: 'primary.main'\n          },\n          children: task.type === TaskType.HEADS ? 'Flip to Heads' : 'Flip to Tails'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: task.status,\n          size: \"small\",\n          sx: {\n            backgroundColor: getTaskStatusColor(task.status),\n            color: 'white',\n            fontWeight: 500\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: [\"Batch: \", task.batch_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), task.status === TaskStatus.PENDING && task.assigned_to === playerId && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleCompleteTask(task.id),\n          size: \"small\",\n          disabled: flippingCoins[task.id],\n          children: \"Flip Coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)\n  }, `${task.id}-${playerName}-${task.batch_number}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n  const renderPlayer = player => {\n    var _player$completed_tas;\n    const currentBatchTarget = player.current_tasks.length > 0 ? player.current_tasks[0].type : (_player$completed_tas = player.completed_tasks.find(t => t.batch_number === player.current_batch)) === null || _player$completed_tas === void 0 ? void 0 : _player$completed_tas.type;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: 'primary.main'\n              },\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: player.status,\n              size: \"small\",\n              color: getPlayerStatusColor(player.status),\n              sx: {\n                fontWeight: 500\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2,\n                  mb: 2,\n                  backgroundColor: 'rgba(33, 150, 243, 0.1)',\n                  p: 2,\n                  borderRadius: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    fontWeight: 500\n                  },\n                  children: [\"Current Batch: \", player.current_batch, \" / \", game === null || game === void 0 ? void 0 : game.max_batches]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 37\n                }, this), currentBatchTarget && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      fontWeight: 500\n                    },\n                    children: \"Target:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 45\n                  }, this), renderCoin(currentBatchTarget, false, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Current Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: player.current_tasks.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: player.completed_tasks.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                color: 'primary.main',\n                fontWeight: 500,\n                mb: 2\n              },\n              children: \"Current Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), player.current_tasks.map(task => renderTask(task, player.name))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this), player.completed_tasks.length > 0 && game && player.order === game.players.length - 1 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              sx: {\n                color: 'primary.main',\n                fontWeight: 500,\n                mb: 2\n              },\n              children: \"Completed Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), player.completed_tasks.map(task => renderTask(task, player.name))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)\n    }, `player-${player.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this);\n  };\n  if (!gameId || !playerId) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        backgroundColor: 'background.default',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: (_, newValue) => setActiveTab(newValue),\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Create Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this), activeTab === 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Your Name\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Players\",\n            type: \"number\",\n            value: playerCount,\n            onChange: e => setPlayerCount(Number(e.target.value)),\n            inputProps: {\n              min: 2,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Number of Batches\",\n            type: \"number\",\n            value: maxBatches,\n            onChange: e => setMaxBatches(Number(e.target.value)),\n            inputProps: {\n              min: 1,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Tasks per Batch\",\n            type: \"number\",\n            value: tasksPerBatch,\n            onChange: e => setTasksPerBatch(Number(e.target.value)),\n            inputProps: {\n              min: 1,\n              max: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleCreateGame,\n            disabled: !playerName,\n            children: \"Create Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Game ID\",\n            value: joinGameId,\n            onChange: e => setJoinGameId(e.target.value.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Player Name\",\n            value: playerName,\n            onChange: e => setPlayerName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleJoinGame,\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      backgroundColor: 'background.default',\n      minHeight: '100vh'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }, this), game && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 1,\n          color: 'primary.main'\n        },\n        children: [\"Game ID: \", game.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          mb: 3,\n          color: 'text.primary'\n        },\n        children: [\"Game Status: \", game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }, this), game.status === 'waiting' && playerId === ((_game$players$ = game.players[0]) === null || _game$players$ === void 0 ? void 0 : _game$players$.id) && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleStartGame,\n        sx: {\n          mb: 3\n        },\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: game.players.map(renderPlayer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"cTGVTJtFAMVl1HtcCpGd0rzo5sU=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","Typography","Grid","TextField","Tabs","Tab","Alert","Chip","keyframes","TaskStatus","PlayerStatus","TaskType","gameService","WebSocketService","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","gameId","initialGameId","_s","_game$players$","setGameId","game","setGame","playerName","setPlayerName","playerId","setPlayerId","wsService","setWsService","showJoinDialog","setShowJoinDialog","playerCount","setPlayerCount","maxBatches","setMaxBatches","tasksPerBatch","setTasksPerBatch","joinGameId","setJoinGameId","error","setError","activeTab","setActiveTab","service","updatedGame","console","log","connect","disconnect","handleCreateGame","newGameId","createGame","newPlayerId","joinGame","gameState","getGameState","handleJoinGame","targetGameId","exists","checkGameExists","handleStartGame","startGame","flipAnimation","renderCoin","type","isFlipping","isSmall","sx","width","height","borderRadius","display","alignItems","justifyContent","backgroundColor","HEADS","border","color","fontWeight","fontSize","animation","perspective","mb","position","content","top","left","right","bottom","background","pointerEvents","children","fileName","_jsxFileName","lineNumber","columnNumber","flippingCoins","setFlippingCoins","handleCompleteTask","taskId","prev","setTimeout","completeTask","getPlayerStatusColor","status","ACTIVE","WAITING","IDLE","getTaskStatusColor","COMPLETED","IN_PROGRESS","PENDING","renderTask","task","overflow","pb","flexDirection","id","variant","label","size","batch_number","assigned_to","onClick","disabled","renderPlayer","player","_player$completed_tas","currentBatchTarget","current_tasks","length","completed_tasks","find","t","current_batch","item","xs","md","name","container","spacing","gap","p","max_batches","mt","map","order","players","minHeight","value","onChange","_","newValue","severity","fullWidth","e","target","required","Number","inputProps","min","max","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/huanghao/Desktop/online multiplayer task game/frontend/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Typography,\n    Grid,\n    TextField,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\n    Alert,\n    Chip,\n    keyframes\n} from '@mui/material';\nimport { Game as GameType, Player, Task, TaskStatus, PlayerStatus, TaskType } from '../types';\nimport { gameService, WebSocketService } from '../services/gameService';\n\ninterface GameProps {\n    gameId?: string;\n}\n\nexport const Game: React.FC<GameProps> = ({ gameId: initialGameId }) => {\n    const [gameId, setGameId] = useState<string | undefined>(initialGameId);\n    const [game, setGame] = useState<GameType | null>(null);\n    const [playerName, setPlayerName] = useState('');\n    const [playerId, setPlayerId] = useState<string | null>(null);\n    const [wsService, setWsService] = useState<WebSocketService | null>(null);\n    const [showJoinDialog, setShowJoinDialog] = useState(!initialGameId);\n    const [playerCount, setPlayerCount] = useState(2);\n    const [maxBatches, setMaxBatches] = useState(3);\n    const [tasksPerBatch, setTasksPerBatch] = useState(2);\n    const [joinGameId, setJoinGameId] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [activeTab, setActiveTab] = useState(0);\n\n    useEffect(() => {\n        if (gameId && playerId) {\n            const service = new WebSocketService(gameId, playerId, (updatedGame) => {\n                console.log('Game state updated:', updatedGame);\n                setGame(updatedGame);\n            });\n            service.connect();\n            setWsService(service);\n\n            // Cleanup function\n            return () => {\n                service.disconnect();\n            };\n        }\n    }, [gameId, playerId]);\n\n    const handleCreateGame = async () => {\n        if (!playerName) {\n            setError('Please enter your name first');\n            return;\n        }\n\n        try {\n            const newGameId = await gameService.createGame(playerCount, maxBatches, tasksPerBatch);\n            setGameId(newGameId);\n            \n            // Automatically join the game as the creator\n            const newPlayerId = await gameService.joinGame(newGameId, playerName);\n            setPlayerId(newPlayerId);\n            \n            // Get initial game state\n            const gameState = await gameService.getGameState(newGameId);\n            setGame(gameState);\n            \n            setError(null);\n        } catch (error) {\n            setError('Failed to create game. Please try again.');\n            console.error('Error creating game:', error);\n        }\n    };\n\n    const handleJoinGame = async () => {\n        if (!playerName) {\n            setError('Please enter player name');\n            return;\n        }\n\n        const targetGameId = gameId || joinGameId;\n        if (!targetGameId) {\n            setError('Please enter game ID');\n            return;\n        }\n\n        try {\n            const exists = await gameService.checkGameExists(targetGameId);\n            if (!exists) {\n                setError('Game not found');\n                return;\n            }\n\n            const newPlayerId = await gameService.joinGame(targetGameId, playerName);\n            setPlayerId(newPlayerId);\n            setGameId(targetGameId);\n            setShowJoinDialog(false);\n            const gameState = await gameService.getGameState(targetGameId);\n            setGame(gameState);\n            setError(null);\n        } catch (error) {\n            setError('Failed to join game. Please try again.');\n            console.error('Error joining game:', error);\n        }\n    };\n\n    const handleStartGame = async () => {\n        if (!gameId) return;\n\n        try {\n            await gameService.startGame(gameId);\n            setError(null);\n        } catch (error) {\n            setError('Failed to start game. Please try again.');\n            console.error('Error starting game:', error);\n        }\n    };\n\n    const flipAnimation = keyframes`\n        0% {\n            transform: rotateY(0deg);\n        }\n        100% {\n            transform: rotateY(1800deg);\n        }\n    `;\n\n    const renderCoin = (type: TaskType, isFlipping: boolean, isSmall: boolean = false) => (\n        <Box\n            sx={{\n                width: isSmall ? 40 : 80,\n                height: isSmall ? 40 : 80,\n                borderRadius: '50%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: type === TaskType.HEADS ? '#FFD700' : '#DAA520',\n                border: `${isSmall ? 2 : 4}px solid #B8860B`,\n                color: '#704214',\n                fontWeight: 'bold',\n                fontSize: isSmall ? '0.9rem' : '1.2rem',\n                animation: isFlipping ? `${flipAnimation} 1s ease-in-out` : 'none',\n                perspective: 1000,\n                mb: isSmall ? 0 : 2,\n                position: 'relative',\n                '&::after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    borderRadius: '50%',\n                    background: 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 50%, rgba(0,0,0,0.1) 100%)',\n                    pointerEvents: 'none'\n                }\n            }}\n        >\n            {type === TaskType.HEADS ? 'H' : 'T'}\n        </Box>\n    );\n\n    const [flippingCoins, setFlippingCoins] = useState<{[key: string]: boolean}>({});\n\n    const handleCompleteTask = (taskId: string) => {\n        if (wsService) {\n            setFlippingCoins(prev => ({ ...prev, [taskId]: true }));\n            setTimeout(() => {\n                wsService.completeTask(taskId);\n                setFlippingCoins(prev => ({ ...prev, [taskId]: false }));\n            }, 1000);\n        }\n    };\n\n    const getPlayerStatusColor = (status: PlayerStatus) => {\n        switch (status) {\n            case PlayerStatus.ACTIVE:\n                return 'success';\n            case PlayerStatus.WAITING:\n                return 'warning';\n            case PlayerStatus.IDLE:\n                return 'default';\n            default:\n                return 'default';\n        }\n    };\n\n    const getTaskStatusColor = (status: TaskStatus) => {\n        switch (status) {\n            case TaskStatus.COMPLETED:\n                return '#4caf50';\n            case TaskStatus.IN_PROGRESS:\n                return '#ff9800';\n            case TaskStatus.PENDING:\n                return '#9e9e9e';\n            default:\n                return '#9e9e9e';\n        }\n    };\n\n    const renderTask = (task: Task, playerName: string) => (\n        <Card \n            key={`${task.id}-${playerName}-${task.batch_number}`} \n            sx={{ \n                mb: 2,\n                backgroundColor: 'background.paper',\n                position: 'relative',\n                overflow: 'visible'\n            }}\n        >\n            <CardContent sx={{ \n                pb: '16px !important',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n            }}>\n                {renderCoin(task.type, flippingCoins[task.id] || false)}\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%', mb: 1 }}>\n                    <Typography variant=\"h6\" sx={{ color: 'primary.main' }}>\n                        {task.type === TaskType.HEADS ? 'Flip to Heads' : 'Flip to Tails'}\n                    </Typography>\n                    <Chip\n                        label={task.status}\n                        size=\"small\"\n                        sx={{\n                            backgroundColor: getTaskStatusColor(task.status),\n                            color: 'white',\n                            fontWeight: 500,\n                        }}\n                    />\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        Batch: {task.batch_number}\n                    </Typography>\n                    {task.status === TaskStatus.PENDING && task.assigned_to === playerId && (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => handleCompleteTask(task.id)}\n                            size=\"small\"\n                            disabled={flippingCoins[task.id]}\n                        >\n                            Flip Coin\n                        </Button>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    const renderPlayer = (player: Player) => {\n        const currentBatchTarget = player.current_tasks.length > 0 \n            ? player.current_tasks[0].type \n            : player.completed_tasks.find(t => t.batch_number === player.current_batch)?.type;\n\n        return (\n            <Grid item xs={12} md={6} key={`player-${player.id}`}>\n                <Card sx={{ height: '100%' }}>\n                    <CardContent>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                            <Typography variant=\"h6\" sx={{ color: 'primary.main' }}>{player.name}</Typography>\n                            <Chip\n                                label={player.status}\n                                size=\"small\"\n                                color={getPlayerStatusColor(player.status)}\n                                sx={{ fontWeight: 500 }}\n                            />\n                        </Box>\n                        <Grid container spacing={2} sx={{ mb: 3 }}>\n                            <Grid item xs={12}>\n                                <Box sx={{ \n                                    display: 'flex', \n                                    alignItems: 'center', \n                                    gap: 2, \n                                    mb: 2,\n                                    backgroundColor: 'rgba(33, 150, 243, 0.1)',\n                                    p: 2,\n                                    borderRadius: 2\n                                }}>\n                                    <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\n                                        Current Batch: {player.current_batch} / {game?.max_batches}\n                                    </Typography>\n                                    {currentBatchTarget && (\n                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                                            <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\n                                                Target:\n                                            </Typography>\n                                            {renderCoin(currentBatchTarget, false, true)}\n                                        </Box>\n                                    )}\n                                </Box>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography variant=\"body2\" color=\"textSecondary\">Current Tasks</Typography>\n                                <Typography variant=\"h6\">{player.current_tasks.length}</Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography variant=\"body2\" color=\"textSecondary\">Completed</Typography>\n                                <Typography variant=\"h6\">{player.completed_tasks.length}</Typography>\n                            </Grid>\n                        </Grid>\n                        <Box sx={{ mt: 3 }}>\n                            <Typography variant=\"subtitle1\" sx={{ color: 'primary.main', fontWeight: 500, mb: 2 }}>\n                                Current Tasks\n                            </Typography>\n                            {player.current_tasks.map(task => renderTask(task, player.name))}\n                        </Box>\n                        {player.completed_tasks.length > 0 && game && player.order === game.players.length - 1 && (\n                            <Box sx={{ mt: 3 }}>\n                                <Typography variant=\"subtitle1\" sx={{ color: 'primary.main', fontWeight: 500, mb: 2 }}>\n                                    Completed Tasks\n                                </Typography>\n                                {player.completed_tasks.map(task => renderTask(task, player.name))}\n                            </Box>\n                        )}\n                    </CardContent>\n                </Card>\n            </Grid>\n        );\n    };\n\n    if (!gameId || !playerId) {\n        return (\n            <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n                <Tabs value={activeTab} onChange={(_, newValue) => setActiveTab(newValue)} sx={{ mb: 3 }}>\n                    <Tab label=\"Create Game\" />\n                    <Tab label=\"Join Game\" />\n                </Tabs>\n\n                {error && (\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>\n                        {error}\n                    </Alert>\n                )}\n\n                {activeTab === 0 ? (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Your Name\"\n                                value={playerName}\n                                onChange={(e) => setPlayerName(e.target.value)}\n                                required\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Number of Players\"\n                                type=\"number\"\n                                value={playerCount}\n                                onChange={(e) => setPlayerCount(Number(e.target.value))}\n                                inputProps={{ min: 2, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Number of Batches\"\n                                type=\"number\"\n                                value={maxBatches}\n                                onChange={(e) => setMaxBatches(Number(e.target.value))}\n                                inputProps={{ min: 1, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                fullWidth\n                                label=\"Tasks per Batch\"\n                                type=\"number\"\n                                value={tasksPerBatch}\n                                onChange={(e) => setTasksPerBatch(Number(e.target.value))}\n                                inputProps={{ min: 1, max: 10 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button \n                                variant=\"contained\" \n                                onClick={handleCreateGame}\n                                disabled={!playerName}\n                            >\n                                Create Game\n                            </Button>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Game ID\"\n                                value={joinGameId}\n                                onChange={(e) => setJoinGameId(e.target.value.toUpperCase())}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Player Name\"\n                                value={playerName}\n                                onChange={(e) => setPlayerName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button variant=\"contained\" onClick={handleJoinGame}>\n                                Join Game\n                            </Button>\n                        </Grid>\n                    </Grid>\n                )}\n            </Box>\n        );\n    }\n\n    return (\n        <Box sx={{ p: 3, backgroundColor: 'background.default', minHeight: '100vh' }}>\n            {error && (\n                <Alert severity=\"error\" sx={{ mb: 2 }}>\n                    {error}\n                </Alert>\n            )}\n\n            {game && (\n                <>\n                    <Typography variant=\"h4\" sx={{ mb: 1, color: 'primary.main' }}>\n                        Game ID: {game.id}\n                    </Typography>\n                    <Typography variant=\"h5\" sx={{ mb: 3, color: 'text.primary' }}>\n                        Game Status: {game.status === 'waiting' ? 'Waiting' : game.status === 'in_progress' ? 'In Progress' : 'Completed'}\n                    </Typography>\n\n                    {game.status === 'waiting' && playerId === game.players[0]?.id && (\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleStartGame}\n                            sx={{ mb: 3 }}\n                        >\n                            Start Game\n                        </Button>\n                    )}\n\n                    <Grid container spacing={3}>\n                        {game.players.map(renderPlayer)}\n                    </Grid>\n                </>\n            )}\n        </Box>\n    );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}